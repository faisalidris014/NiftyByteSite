{"file_contents":{"CHANGELOG.md":{"content":"# NiftyByte Technologies - Change Documentation\n\n## Changes Log\n\n### 2025-01-10 - Logo Replacement Update\n\n#### Summary\nReplaced all existing logos across the website with the new official NiftyByte Technologies logo (inverted color variant).\n\n#### Changes Made\n\n1. **Logo Assets**\n   - Added new logo image: `attached_assets/Nifty Byte Inverted Color_1754788468624.png`\n   - Logo features: Purple gradient chevron stack with white \"NIFTYBYTE TECHNOLOGIES\" text\n\n2. **Navigation Bar (`client/src/components/layout/NavBar.tsx`)**\n   - **Before**: FontAwesome icon (`fas fa-layer-group`) with gradient background\n   - **After**: New logo image with proper sizing and styling\n   - Location: Lines 38-44\n\n3. **Footer (`client/src/components/layout/Footer.tsx`)**\n   - **Before**: FontAwesome icon (`fas fa-layer-group`) with gradient background  \n   - **After**: New logo image with proper sizing and styling\n   - Location: Lines 10-15\n\n4. **Hero Section (`client/src/components/sections/Hero.tsx`)**\n   - **Before**: Custom \"NB\" text with gradient effects and layered backgrounds\n   - **After**: New logo image as the main visual element\n   - Location: Lines 35-50\n\n#### Technical Implementation\n- Used `@assets/...` import syntax for logo reference\n- Maintained responsive design and existing spacing\n- Preserved hover effects and accessibility features\n- Kept existing `data-testid` attributes for testing\n- Hot module reloading applied changes successfully\n- No TypeScript/ESLint errors detected\n\n#### Files Modified\n- `client/src/components/layout/NavBar.tsx`\n- `client/src/components/layout/Footer.tsx` \n- `client/src/components/sections/Hero.tsx`\n- `CHANGELOG.md` (created)\n\n#### Visual Impact\n- Consistent branding across all pages\n- Professional appearance with official logo\n- Maintained dark theme compatibility\n- Enhanced brand recognition\n\n#### Status\n✅ **COMPLETED** - All logo replacements successfully implemented and deployed\n\n---\n\n### 2025-01-10 - Input Field Background Color Update\n\n#### Summary\nUpdated the Name input field background color in the IntakeForm component to white (#ffffff) for improved visibility and styling consistency.\n\n#### Changes Made\n\n1. **IntakeForm Component (`client/src/components/booking/IntakeForm.tsx`)**\n   - **Before**: Name input field with default background styling\n   - **After**: Name input field with explicit white background (#ffffff)\n   - **Location**: Line 80\n   - **Change**: Added `bg-white` class to the existing className\n\n#### Technical Implementation\n- Added `bg-white` Tailwind CSS class to the Name input field\n- Maintained all existing styling and functionality\n- Preserved form validation and data handling\n- Kept existing `data-testid` attributes for testing\n\n#### Files Modified\n- `client/src/components/booking/IntakeForm.tsx`\n- `CHANGELOG.md` (updated)\n\n#### Visual Impact\n- Enhanced input field visibility with pure white background\n- Improved form aesthetics and user experience\n- Consistent styling with form design requirements\n\n#### Status\n✅ **COMPLETED** - Input field background color successfully updated\n\n### 2025-01-10 - Email Input Field Background Color Update\n\n#### Summary\nUpdated the Email input field background color in the IntakeForm component to white (#ffffff) for improved visibility and styling consistency.\n\n#### Changes Made\n\n1. **IntakeForm Component (`client/src/components/booking/IntakeForm.tsx`)**\n   - **Before**: Email input field with default background styling\n   - **After**: Email input field with explicit white background (#ffffff)\n   - **Location**: Line 93\n   - **Change**: Added `bg-white` class to the existing className\n\n#### Technical Implementation\n- Added `bg-white` Tailwind CSS class to the Email input field\n- Maintained all existing styling and functionality\n- Preserved form validation and data handling\n- Kept existing `data-testid` attributes for testing\n\n#### Files Modified\n- `client/src/components/booking/IntakeForm.tsx`\n- `CHANGELOG.md` (updated)\n\n#### Visual Impact\n- Enhanced input field visibility with pure white background\n- Improved form aesthetics and user experience\n- Consistent styling with other form fields\n\n#### Status\n✅ **COMPLETED** - Email input field background color successfully updated\n\n### 2025-01-10 - Company Name Input Field Background Color Update\n\n#### Summary\nUpdated the Company Name input field background color in the IntakeForm component to white (#ffffff) for improved visibility and styling consistency.\n\n#### Changes Made\n\n1. **IntakeForm Component (`client/src/components/booking/IntakeForm.tsx`)**\n   - **Before**: Company Name input field with default background styling\n   - **After**: Company Name input field with explicit white background (#ffffff)\n   - **Location**: Line 108\n   - **Change**: Added `bg-white` class to the existing className\n\n#### Technical Implementation\n- Added `bg-white` Tailwind CSS class to the Company Name input field\n- Maintained all existing styling and functionality\n- Preserved form validation and data handling\n- Kept existing `data-testid` attributes for testing\n\n#### Files Modified\n- `client/src/components/booking/IntakeForm.tsx`\n- `CHANGELOG.md` (updated)\n\n#### Visual Impact\n- Enhanced input field visibility with pure white background\n- Improved form aesthetics and user experience\n- Consistent styling with Name and Email input fields\n\n#### Status\n✅ **COMPLETED** - Company Name input field background color successfully updated\n\n### 2025-01-10 - Current IT Setup Container Background Color Update\n\n#### Summary\nUpdated the Current IT Setup container background color in the IntakeForm component to white (#ffffff) for improved visibility and styling consistency with other form elements.\n\n#### Changes Made\n\n1. **IntakeForm Component (`client/src/components/booking/IntakeForm.tsx`)**\n   - **Before**: IT Setup container with default background styling\n   - **After**: IT Setup container with explicit white background (#ffffff), padding, and border\n   - **Location**: Line 131\n   - **Change**: Added `bg-white p-3 rounded-lg border border-gray-300` classes to the existing className\n\n#### Technical Implementation\n- Added `bg-white` Tailwind CSS class for white background\n- Added `p-3` for consistent internal padding\n- Added `rounded-lg` for rounded corners matching form aesthetic\n- Added `border border-gray-300` for consistent border styling with input fields\n- Maintained all existing functionality for IT setup option selection\n- Preserved all existing `data-testid` attributes for testing\n\n#### Files Modified\n- `client/src/components/booking/IntakeForm.tsx`\n- `CHANGELOG.md` (updated)\n\n#### Visual Impact\n- Enhanced container visibility with pure white background\n- Improved visual hierarchy and form organization\n- Consistent styling with other form input elements\n- Better separation of IT setup options for improved usability\n\n#### Status\n✅ **COMPLETED** - Current IT Setup container background color successfully updated\n\n### 2025-01-10 - IT Setup Options Gradient Background Update\n\n#### Summary\nUpdated the Current IT Setup option buttons to use the same pinkish-purple gradient background as the \"Continue to Booking\" button for consistent brand styling across the form.\n\n#### Changes Made\n\n1. **IntakeForm Component (`client/src/components/booking/IntakeForm.tsx`)**\n   - **Before**: IT Setup buttons with solid `bg-nb-primary` background when selected\n   - **After**: IT Setup buttons with gradient `bg-gradient-to-r from-nb-accent to-nb-primary` when selected\n   - **Location**: Lines 137-141\n   - **Change**: Updated selected state from `bg-nb-primary` to `bg-gradient-to-r from-nb-accent to-nb-primary`\n   - **Hover Effect**: Updated hover state from `hover:bg-nb-primary` to `hover:bg-gradient-to-r hover:from-nb-accent hover:to-nb-primary`\n\n#### Technical Implementation\n- Applied the same gradient classes used in `glow-button` CSS class\n- Maintained existing transition and hover effects\n- Preserved all existing functionality for option selection\n- Kept all existing `data-testid` attributes for testing\n- Maintained white text color for proper contrast\n\n#### Files Modified\n- `client/src/components/booking/IntakeForm.tsx`\n- `CHANGELOG.md` (updated)\n\n#### Visual Impact\n- Consistent brand styling with the main CTA button\n- Enhanced visual hierarchy with matching gradient backgrounds\n- Professional appearance with cohesive color scheme\n- Improved user experience with unified design language\n\n#### Status\n✅ **COMPLETED** - IT Setup options gradient background successfully updated\n\n---\n\n### 2025-01-10 - Hero Section AI-Powered Messaging Update\n\n#### Summary\nUpdated hero section messaging to emphasize AI-powered IT solutions, highlighting 15+ years of expertise combined with cutting-edge AI technology for modern business needs.\n\n#### Changes Made\n\n1. **Hero Component (`client/src/components/sections/Hero.tsx`)**\n   - **Before**: \"IT CONSULTING EXPERTS\" with generic transformation messaging\n   - **After**: \"Your IT, Powered by AI\" with specific AI expertise positioning\n   - **Headline**: Changed to focus on AI-powered IT solutions\n   - **Subheading**: Updated to emphasize outdated tech problems and AI solutions\n   - **Experience**: Highlighted 15+ years of IT expertise combined with cutting-edge AI\n   - **Value Proposition**: Security, compliance, and competitive advantage focus\n\n#### Technical Implementation\n- Updated headline to \"Your IT, Powered by AI\" for clear AI positioning\n- Revised subheading to address pain points and highlight AI expertise\n- Emphasized 15+ years of experience combined with cutting-edge AI\n- Focused messaging on security, compliance, and competitive advantage\n- Updated button text to sentence case \"Book Free Consultation\"\n- Maintained two-column grid layout with enhanced floating content container\n- Preserved logo integration with glow effects and hover animations\n- Kept responsive design with mobile-first approach\n\n#### Files Modified\n- `client/src/components/sections/Hero.tsx`\n- `CHANGELOG.md` (updated)\n\n#### Visual Impact\n- AI-focused messaging positions company as innovative technology leader\n- Clear pain point identification (outdated tech support) creates urgency\n- Experience credibility (15+ years) builds trust and authority\n- AI emphasis appeals to forward-thinking business decision makers\n- Security and compliance focus addresses key business concerns\n- Professional messaging maintains high-end consulting positioning\n- Competitive advantage messaging differentiates from traditional IT support\n\n#### Status\n✅ **COMPLETED** - Hero section AI-powered messaging successfully updated\n\n---\n\n### 2025-01-10 - Navigation Header Transparent Logo Update\n\n#### Summary\nUpdated the navigation header to use the transparent PNG version of the NiftyByte chevron icon for optimal integration with the header background.\n\n#### Changes Made\n\n1. **NavBar Component (`client/src/components/layout/NavBar.tsx`)**\n   - **Before**: Full NiftyByte logo with text in navigation header\n   - **After**: Transparent chevron icon for seamless header integration\n   - **Icon**: Updated to use transparent PNG icon (`1754808044144_1754808063522.png`)\n   - **Styling**: Optimized sizing (h-8 w-8) for clean header appearance\n   - **Brand Recognition**: Maintains brand identity with recognizable chevron symbol\n\n#### Technical Implementation\n- Replaced logo import with transparent PNG version\n- Updated image styling to `h-8 w-8` for optimal header proportions\n- Removed rounded corners as transparent background eliminates need\n- Maintained alt text and accessibility attributes\n- Preserved responsive design and hover effects\n\n#### Visual Impact\n- Seamless integration with header background using transparent PNG\n- Clean, professional icon appearance without background artifacts\n- Optimal sizing for header proportions and readability\n- Recognizable brand symbol maintains brand consistency\n- Enhanced visual clarity with transparent background integration\n\n#### Status\n✅ **COMPLETED** - Navigation header logo successfully updated to transparent icon\n\n---\n\n### 2025-01-10 - GlowButton Secondary Variant Text Color Fix\n\n#### Summary\nFixed the secondary variant of GlowButton to always display white text instead of only showing white on hover, improving readability and consistency.\n\n#### Changes Made\n\n1. **GlowButton Component (`client/src/components/ui/glow-button.tsx`)**\n   - **Before**: Secondary buttons had purple text (`text-nb-primary`) with white only on hover\n   - **After**: Secondary buttons now have white text (`text-white`) by default\n   - **Border**: Updated from purple to white border for better contrast\n   - **Hover State**: Changed to white background with dark text on hover\n\n#### Technical Implementation\n- Updated secondary variant styling from `text-nb-primary` to `text-white`\n- Changed border color from `border-nb-primary` to `border-white`\n- Modified hover state to `hover:bg-white hover:text-nb-bg` for better contrast\n- Maintained transparent background for normal state\n\n#### Visual Impact\n- \"Learn More\" button now has consistent white text visibility\n- Better contrast and readability against dark backgrounds\n- Improved accessibility with always-visible text\n- Maintains professional appearance with white border styling\n\n#### Status\n✅ **COMPLETED** - GlowButton secondary variant text color successfully fixed\n\n---\n\n### 2025-01-10 - Custom Font Integration: Source Sans Pro\n\n#### Summary\nIntegrated Source Sans Pro font as the primary heading font, replacing Sora to provide a more professional and modern typography experience.\n\n#### Changes Made\n\n1. **Font Integration (`client/src/index.css`)**\n   - **Font File**: Added custom TTF font import (`SourceSans_1754808139841.ttf`)\n   - **Font Face**: Configured @font-face declaration with proper font-display: swap\n   - **CSS Variable**: Updated --font-heading to use Source Sans Pro\n\n2. **Tailwind Configuration (`tailwind.config.ts`)**\n   - **Font Family**: Added 'source-sans' font family configuration\n   - **Fallback**: Configured proper sans-serif fallback stack\n\n3. **Hero Component (`client/src/components/sections/Hero.tsx`)**\n   - **Heading Font**: Changed from font-sora to font-source-sans\n   - **Typography**: Maintained bold weight and responsive sizing\n\n#### Technical Implementation\n- Added @font-face declaration with TTF file import\n- Updated CSS custom property for heading font\n- Extended Tailwind font family configuration\n- Applied new font to main hero heading\n- Maintained performance with font-display: swap\n\n#### Visual Impact\n- Professional typography with Source Sans Pro for headings\n- Improved readability and modern appearance\n- Consistent brand typography across the application\n- Better font loading performance with display optimization\n\n#### Status\n✅ **COMPLETED** - Source Sans Pro font successfully integrated for headings\n\n---\n\n### 2025-01-10 - Services Mega Menu Implementation\n\n#### Summary\nTransformed the Services dropdown into an engaging mega menu with service cards featuring icons, descriptions, and enhanced visual design for better user experience and service discovery.\n\n#### Changes Made\n\n1. **NavBar Component (`client/src/components/layout/NavBar.tsx`)**\n   - **Before**: Simple dropdown list with service names only\n   - **After**: Rich mega menu with service cards including icons and descriptions\n   - **Layout**: 2-column grid layout in 800px wide dropdown\n   - **Service Data**: Enhanced with AI-focused descriptions and emojis\n   - **Interactions**: Hover effects, scaling animations, and color transitions\n\n#### Service Enhancement\n- **AI-Powered IT Strategy**: Strategic planning with AI insights\n- **Digital Transformation**: End-to-end modernization with AI\n- **Cybersecurity & Compliance**: AI-enhanced security solutions\n- **Cloud Migration & Optimization**: Smart cloud with AI optimization\n- **Managed IT Services**: 24/7 support with AI monitoring\n- **Data Analytics & AI**: Advanced AI and machine learning services\n\n#### Technical Implementation\n- Expanded DropdownMenuContent to 800px width with padding\n- Implemented 2-column grid layout for service cards\n- Added hover states with border, background, and scale animations\n- Enhanced service data structure with descriptions and icons\n- Added \"View All Services\" footer link for complete service overview\n\n#### Visual Impact\n- Professional mega menu showcases service expertise\n- Clear service differentiation with icons and descriptions\n- AI emphasis throughout service descriptions\n- Enhanced user engagement with interactive hover effects\n- Improved service discovery and navigation experience\n\n#### Status\n✅ **COMPLETED** - Services mega menu successfully implemented\n\n---\n\n### 2025-01-10 - Minimalistic Design System Update\n\n#### Summary\nUpdated the design system to eliminate cartoony curved borders and replace them with minimalistic styling featuring subtle shadows and reduced border radius for a more professional, clean aesthetic.\n\n#### Changes Made\n\n1. **Border Radius Reduction (`client/src/index.css` & `tailwind.config.ts`)**\n   - **Before**: --radius: 1.3rem (very rounded corners)\n   - **After**: --radius: 0.5rem (subtle, professional corners)\n   - **Impact**: Less cartoony appearance, more business-appropriate\n\n2. **Custom Shadow System (`tailwind.config.ts`)**\n   - **Subtle**: Light depth shadows for minimal elements\n   - **Soft**: Medium depth for interactive components\n   - **Depth**: Multi-layered shadows for elevated elements\n   - **Floating**: Premium shadow for hero and primary elements\n\n3. **Hero Section Refinement (`client/src/components/sections/Hero.tsx`)**\n   - **Shadow**: Changed from shadow-2xl to shadow-floating\n   - **Hover Effect**: Replaced scale transform with subtle translateY\n   - **Border**: Reduced border opacity for cleaner appearance\n\n4. **Services Mega Menu Updates (`client/src/components/layout/NavBar.tsx`)**\n   - **Rounded Corners**: Changed from rounded-lg to rounded\n   - **Subtle Borders**: Reduced border opacity from white/10 to white/5\n   - **Hover Shadows**: Added shadow-soft on hover for depth\n   - **Background**: Reduced hover background opacity for subtlety\n\n5. **Button System (`client/src/components/ui/glow-button.tsx` & CSS)**\n   - **Shadows**: Replaced glow effects with professional shadow system\n   - **Border Radius**: Changed from rounded-2xl to rounded\n   - **Secondary Variant**: Refined border and shadow styling\n   - **Hover Effects**: Subtle shadow depth changes instead of glow\n\n#### Technical Implementation\n- Removed excessive border radius values throughout components\n- Implemented progressive shadow system with 4 levels of depth\n- Reduced visual noise while maintaining interactive feedback\n- Preserved brand colors and gradients in a more refined way\n\n#### Visual Impact\n- Professional, minimalistic appearance\n- Subtle depth through shadows instead of heavy borders\n- Clean, business-appropriate aesthetic\n- Maintains interactivity without cartoon-like elements\n- Better alignment with modern design trends\n\n#### Status\n✅ **COMPLETED** - Minimalistic design system successfully implemented\n\n---\n\n### 2025-01-10 - Hover-Activated Navigation Menus\n\n#### Summary\nConverted dropdown navigation menus from click-based to hover-activated, providing a more intuitive and responsive navigation experience for both Services mega menu and Industries dropdown.\n\n#### Changes Made\n\n1. **Services Mega Menu (`client/src/components/layout/NavBar.tsx`)**\n   - **Replaced**: DropdownMenu component with custom hover implementation\n   - **Hover System**: CSS group hover states with opacity and visibility transitions\n   - **Chevron Animation**: Rotating chevron icon on hover for visual feedback\n   - **Service Cards**: Updated to use group/item modifiers for proper hover states\n\n2. **Industries Menu (`client/src/components/layout/NavBar.tsx`)**\n   - **Replaced**: DropdownMenu with custom hover-activated dropdown\n   - **Streamlined Design**: Clean list-style menu with hover backgrounds\n   - **Consistent Styling**: Matching shadow and border styling with Services menu\n\n3. **Import Cleanup**\n   - **Removed**: Unused DropdownMenu component imports\n   - **Simplified**: Import structure for cleaner code\n\n#### Technical Implementation\n- Custom CSS hover states using Tailwind's group utilities\n- Opacity and visibility transitions for smooth menu appearance\n- Z-index management for proper layering\n- Proper spacing with pt-2 for hover area tolerance\n- Group/item modifiers for nested hover states in service cards\n\n#### User Experience Impact\n- **Instant Response**: Menus open immediately on hover\n- **Visual Feedback**: Rotating chevron icons indicate interactive elements\n- **Smooth Transitions**: 200ms transitions for polished feel\n- **Better Discoverability**: Users don't need to click to explore options\n- **Professional Feel**: Modern hover navigation pattern\n\n#### Status\n✅ **COMPLETED** - Hover-activated navigation menus successfully implemented\n\n---\n\n### 2025-01-10 - Hero Section CTA Simplification\n\n#### Summary\nRemoved the secondary \"Learn More\" button from the hero section to reduce visual clutter and focus user attention on the primary call-to-action.\n\n#### Changes Made\n\n1. **Hero Component (`client/src/components/sections/Hero.tsx`)**\n   - **Removed**: Secondary \"Learn More\" button\n   - **Simplified**: CTA container layout from flex-row gap to single button\n   - **Maintained**: Primary \"Book Free Consultation\" button with all styling\n   - **Preserved**: Responsive justification (center on mobile, left on desktop)\n\n#### Design Rationale\n- **Reduced Visual Clutter**: Single CTA creates cleaner, more focused design\n- **Clear User Path**: Eliminates decision paralysis between two similar actions\n- **Stronger Impact**: Primary CTA now has full visual prominence\n- **Professional Simplicity**: Aligns with minimalistic design principles\n\n#### Technical Implementation\n- Simplified flex container structure\n- Removed secondary button and associated test ID\n- Maintained responsive layout behavior\n- Preserved all existing primary button functionality\n\n#### User Experience Impact\n- **Clearer Focus**: Single, prominent call-to-action\n- **Reduced Cognitive Load**: Fewer choices for users to consider\n- **Improved Conversion**: Direct path to primary business goal\n- **Cleaner Aesthetic**: Less busy appearance in hero section\n\n#### Status\n✅ **COMPLETED** - Hero section CTA simplified successfully\n\n---\n\n### 2025-01-10 - Professional Service Icons Implementation\n\n#### Summary\nReplaced emoji icons in the services mega menu with professional Lucide React icons that align with the minimalistic design and brand color scheme.\n\n#### Changes Made\n\n1. **Icon System Update (`client/src/components/layout/NavBar.tsx`)**\n   - **Replaced**: Emoji icons with Lucide React components\n   - **Icon Mapping**: \n     - AI-Powered IT Strategy: Brain icon\n     - Digital Transformation: Rocket icon\n     - Cybersecurity & Compliance: Shield icon\n     - Cloud Migration & Optimization: Cloud icon\n     - Managed IT Services: Settings icon\n     - Data Analytics & AI: BarChart3 icon\n\n2. **Icon Styling Enhancement**\n   - **Color Integration**: Icons use nb-accent base color\n   - **Hover Effects**: Color transitions to nb-primary on hover\n   - **Size Consistency**: Standardized 24px icon size\n   - **Animation**: Maintained scale and color transition effects\n\n3. **Import Management**\n   - **Added**: Required Lucide React icon imports\n   - **Organized**: Icon imports in logical grouping\n   - **Type Safety**: Proper component referencing for icons\n\n#### Technical Implementation\n- Converted string-based emoji icons to React component references\n- Applied brand color scheme (nb-accent → nb-primary on hover)\n- Maintained existing hover animations with color transitions\n- Used consistent 24px sizing for professional appearance\n\n#### Visual Impact\n- **Professional Appearance**: Clean, vector-based icons instead of cartoon emojis\n- **Brand Consistency**: Icons match the purple/pink color scheme\n- **Scalable Design**: Vector icons remain crisp at all sizes\n- **Cohesive Experience**: Icons integrate seamlessly with minimalistic design\n- **Better Accessibility**: Proper icon semantics and sizing\n\n#### Status\n✅ **COMPLETED** - Professional service icons successfully implemented\n\n---\n\n### 2025-01-10 - Color Scheme Refinement: Darker Purple Theme\n\n#### Summary\nUpdated the color scheme from bright pink accent to a darker purple theme that better matches the logo and provides a more professional, sophisticated appearance.\n\n#### Changes Made\n\n1. **Accent Color Update (`client/src/index.css`)**\n   - **Before**: hsl(313, 100%, 64%) - bright pink\n   - **After**: hsl(263, 45%, 45%) - darker purple\n   - **Impact**: More professional and aligned with logo colors\n\n2. **Global Color Variables**\n   - **CSS Root Variables**: Updated --nb-accent and --accent colors\n   - **Dark Theme**: Synchronized accent colors across light and dark modes\n   - **Consistency**: Ensured all accent references use the new darker purple\n\n3. **Gradient System (`tailwind.config.ts`)**\n   - **Brand Gradient**: Updated from bright pink to darker purple tones\n   - **Color Progression**: 7B2DFF → 5A1F8C → 3C1B86 for smoother transitions\n   - **Visual Harmony**: Better alignment with professional branding\n\n4. **Button Styling (`client/src/index.css`)**\n   - **Glow Button**: Updated gradient from nb-accent to nb-primary + purple-600\n   - **Professional Appearance**: Less flashy, more business-appropriate\n   - **Color Balance**: Better contrast and readability\n\n#### Technical Implementation\n- Replaced all instances of bright pink (hsl(313, 100%, 64%)) with darker purple\n- Updated CSS custom properties in both :root and .dark selectors\n- Modified Tailwind gradient configurations for brand consistency\n- Ensured proper contrast ratios for accessibility\n\n#### Visual Impact\n- **Professional Aesthetic**: Darker purple provides more sophisticated appearance\n- **Logo Alignment**: Colors now match the darker purple tones in the NiftyByte logo\n- **Reduced Visual Noise**: Less jarring bright pink, more harmonious design\n- **Better Brand Consistency**: Unified color palette throughout the interface\n- **Enhanced Readability**: Improved contrast for better user experience\n\n#### Status\n✅ **COMPLETED** - Darker purple color scheme successfully implemented\n\n---\n\n### 2025-01-10 - Balanced Pink-Purple Gradient Theme\n\n#### Summary\nRestored the pink-to-purple gradient aesthetic but with more balanced implementation - using gradients selectively for buttons and icons while avoiding overwhelming bright pink everywhere.\n\n#### Changes Made\n\n1. **Accent Color Balance (`client/src/index.css`)**\n   - **Updated**: Accent to hsl(280, 60%, 55%) - balanced purple-pink\n   - **Approach**: Less saturated than original bright pink, warmer than pure purple\n   - **Synchronized**: Both :root and .dark theme accent colors\n\n2. **Gradient System Restoration (`tailwind.config.ts`)**\n   - **Brand Gradient**: Restored pink-to-purple progression (FF4FD8 → 7B2DFF → 3C1B86)\n   - **Visual Appeal**: Brings back the dynamic gradient feel without being overwhelming\n   - **Professional Balance**: Maintains sophistication while adding visual interest\n\n3. **Button Styling Enhancement (`client/src/index.css`)**\n   - **Glow Button**: Updated to use nb-accent to nb-primary gradient\n   - **Color Flow**: Creates natural pink-to-purple transition in buttons\n   - **Professional Appeal**: Gradient effect without being too flashy\n\n4. **Icon Interaction (`client/src/components/layout/NavBar.tsx`)**\n   - **Base Color**: Icons start with nb-accent (balanced purple-pink)\n   - **Hover Effect**: Transition to pink-400 on hover for subtle gradient feel\n   - **Selective Application**: Gradient effect only on hover, not constant\n\n#### Design Philosophy\n- **Selective Gradients**: Use pink-purple gradients strategically, not everywhere\n- **Balanced Saturation**: Avoid overwhelming bright pink while maintaining visual interest\n- **Progressive Enhancement**: Base colors are professional, gradients add polish\n- **User Preference**: Maintains the gradient aesthetic without visual overload\n\n#### Technical Implementation\n- Updated accent colors to balanced purple-pink tone\n- Restored gradient configurations for strategic use\n- Applied gradient effects to buttons and hover states\n- Maintained professional base colors with gradient accents\n\n#### Visual Impact\n- **Balanced Aesthetic**: Pink-purple gradients without overwhelming brightness\n- **Professional Base**: Core colors remain sophisticated and business-appropriate\n- **Dynamic Accents**: Gradients provide visual interest in buttons and interactions\n- **Brand Consistency**: Maintains NiftyByte's gradient identity with better balance\n\n#### Status\n✅ **COMPLETED** - Balanced pink-purple gradient theme successfully implemented\n\n---\n\n### 2025-01-10 - Contact Page Dark Theme Integration\n\n#### Summary\nUpdated the Contact page and IntakeForm component to match the consistent dark theme used throughout the rest of the website, eliminating the jarring white background.\n\n#### Changes Made\n\n1. **Contact Page Background (`client/src/pages/Contact.tsx`)**\n   - **Background**: Changed from bg-white to bg-nb-bg for dark theme consistency\n   - **Text Colors**: Updated title from text-gray-900 to text-nb-text\n   - **Subtitle**: Changed from text-gray-600 to text-nb-muted\n   - **Header Text**: Updated to \"Ready to Get Started?\" for better flow\n\n2. **IntakeForm Dark Theme (`client/src/components/booking/IntakeForm.tsx`)**\n   - **Container**: Changed from white background to bg-nb-card with dark borders\n   - **Form Fields**: Updated all inputs to use dark backgrounds (bg-nb-bg) with nb-text colors\n   - **Labels**: Converted from text-gray-700 to text-nb-text for consistency\n   - **Borders**: Changed from gray borders to white/20 opacity for subtle definition\n   - **Focus States**: Updated focus rings to use nb-accent color\n\n3. **Input Field Styling**\n   - **Background**: All inputs now use bg-nb-bg (dark background)\n   - **Text Color**: Changed to text-nb-text (light text on dark background)\n   - **Placeholders**: Updated to text-nb-muted for proper contrast\n   - **Borders**: Use border-white/20 for subtle, professional appearance\n\n4. **Interactive Elements**\n   - **IT Setup Chips**: Updated to use bg-nb-card with proper dark styling\n   - **Select Dropdowns**: Consistent dark theme with nb-accent focus states\n   - **Hover Effects**: Maintained gradient hover effects with dark theme compatibility\n\n#### Technical Implementation\n- Replaced all white backgrounds with nb-bg and nb-card colors\n- Updated text colors from gray-X00 to nb-text and nb-muted\n- Changed border colors from gray-X00 to white/opacity for dark theme\n- Maintained focus states using nb-accent for brand consistency\n- Preserved gradient effects for interactive elements\n\n#### Visual Impact\n- **Seamless Experience**: Contact page now matches the dark theme of home and other pages\n- **Professional Consistency**: No more jarring white background interruption\n- **Better Flow**: Users experience consistent branding throughout the site\n- **Enhanced Readability**: Proper contrast ratios in dark theme\n- **Brand Cohesion**: Maintains the sophisticated dark aesthetic with pink-purple accents\n\n#### Status\n✅ **COMPLETED** - Contact page dark theme integration successfully implemented\n\n---\n\n### 2025-01-10 - Home Page Contact Section Dark Theme\n\n#### Summary\nUpdated the ContactPreview section on the home page to match the dark theme, ensuring consistent styling across all contact forms throughout the site.\n\n#### Changes Made\n\n1. **ContactPreview Section (`client/src/components/sections/ContactPreview.tsx`)**\n   - **Background**: Changed from bg-white to bg-nb-bg for dark theme consistency\n   - **Title Text**: Updated from text-gray-900 to text-nb-text\n   - **Subtitle**: Changed from text-gray-600 to text-nb-muted\n   - **Seamless Integration**: Now matches the dark theme of surrounding sections\n\n#### Technical Implementation\n- Updated section background to use nb-bg (dark background)\n- Changed text colors to use nb-text and nb-muted for proper contrast\n- Maintained GradientText component for branded \"Started?\" text\n- Preserved existing spacing and layout structure\n\n#### Visual Impact\n- **Complete Consistency**: All contact forms throughout the site now use dark theme\n- **Seamless Flow**: No jarring white sections when scrolling through home page\n- **Professional Unity**: Consistent branding experience from home to contact page\n- **Enhanced User Experience**: Smooth visual transition between all sections\n\n#### Status\n✅ **COMPLETED** - Home page contact section dark theme successfully implemented\n\n---\n\n### 2025-01-10 - Navigation Logo Size Enhancement\n\n#### Summary\nIncreased the size of the NiftyByte logo in the navigation header to improve brand visibility and make it twice as prominent.\n\n#### Changes Made\n\n1. **Logo Size (`client/src/components/layout/NavBar.tsx`)**\n   - **Before**: h-8 w-8 (32px x 32px)\n   - **After**: h-16 w-16 (64px x 64px) - exactly 2x larger\n   - **Navigation Height**: Increased from h-16 to h-20 to accommodate larger logo\n\n#### Technical Implementation\n- Updated logo className from h-8 w-8 to h-16 w-16\n- Increased navigation container height from h-16 to h-20 for proper spacing\n- Maintained proper aspect ratio and positioning\n\n#### Visual Impact\n- **Enhanced Brand Presence**: Logo is now twice as visible and prominent\n- **Better Recognition**: Larger logo improves brand awareness and memorability\n- **Professional Appearance**: Balanced sizing with navigation elements\n- **Improved Accessibility**: Larger logo is easier to see and click\n\n#### Status\n✅ **COMPLETED** - Navigation logo size successfully doubled\n\n---\n\n### 2025-01-10 - Brighter Text Enhancement\n\n#### Summary\nUpdated text colors throughout the site to use brighter white for better visibility and contrast, making regular text as bright as menu text and slider text.\n\n#### Changes Made\n\n1. **CSS Color Variables (`client/src/index.css`)**\n   - **nb-muted**: Updated from hsl(255, 7%, 65%) to hsl(255, 15%, 85%) - significantly brighter\n   - **muted-foreground**: Updated from hsl(255, 7%, 65%) to hsl(255, 15%, 85%) in both light and dark themes\n   - **Impact**: All text using these variables is now much more visible\n\n2. **About Page Text Updates (`client/src/pages/About.tsx`)**\n   - **Story Text**: Changed from text-gray-700 to text-nb-muted for brighter appearance\n   - **Subtitle Text**: Updated from text-gray-600 to text-nb-muted for better contrast\n   - **Bio Text**: Changed leadership bios from text-gray-600 to text-nb-muted\n   - **Values Text**: Updated value descriptions from text-gray-600 to text-nb-muted\n\n#### Technical Implementation\n- Increased lightness value in HSL from 65% to 85% for nb-muted color\n- Applied consistent text-nb-muted class throughout pages for uniform brightness\n- Maintained existing text hierarchy while improving readability\n- Updated both :root and .dark CSS selectors for theme consistency\n\n#### Visual Impact\n- **Enhanced Readability**: Text is now as bright as menu and slider text\n- **Better Contrast**: Improved visibility against dark backgrounds\n- **Consistent Brightness**: Unified text appearance across all components\n- **Professional Appearance**: Maintains elegant design while improving accessibility\n- **User Experience**: Easier to read content without eye strain\n\n#### Global Effect\nThis change affects all components using:\n- text-nb-muted class\n- text-muted-foreground class\n- placeholder:text-muted-foreground\n- Any component referencing the --nb-muted or --muted-foreground CSS variables\n\n#### Status\n✅ **COMPLETED** - Brighter text enhancement successfully implemented across the site","size_bytes":35821},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nNiftyByte Technologies is a comprehensive IT consulting company website built as a full-stack application. The platform showcases the company's services, industry expertise, and provides an interactive contact system with intelligent booking recommendations. The application features a modern, gradient-themed design with dark styling and includes pages for services, industries, resources, blog, about, and contact functionality.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n\n**Framework & Tooling**: React 18 with TypeScript, using Vite as the build tool and development server. The application uses Wouter for client-side routing instead of React Router.\n\n**UI Components**: Built with shadcn/ui components library using Radix UI primitives for accessibility. Tailwind CSS provides utility-first styling with custom brand colors and gradients.\n\n**State Management**: TanStack Query (React Query) handles server state management and API caching. Local component state is managed with React hooks.\n\n**Styling System**: Custom design system with brand-specific color palette (NiftyByte purple/pink gradients), custom component variants (GlowButton, GlowCard, GradientText), and CSS animations for interactive elements.\n\n## Backend Architecture\n\n**Server Framework**: Express.js with TypeScript, featuring middleware for logging, JSON parsing, and error handling.\n\n**API Design**: RESTful API endpoints for contact form submissions with validation using Zod schemas. Currently implements in-memory storage but structured for easy database integration.\n\n**Data Validation**: Comprehensive input validation using Zod schemas that are shared between frontend and backend, ensuring type safety across the stack.\n\n## Database Design\n\n**ORM & Schema**: Drizzle ORM with PostgreSQL dialect configured for future database integration. Schema includes users table and contact_inquiries table with proper typing.\n\n**Current Storage**: Temporary in-memory storage implementation that matches the database schema structure, allowing for seamless transition to PostgreSQL.\n\n## Business Logic Features\n\n**Intelligent Booking System**: Dynamic booking recommendations based on form data (company size and urgency level determine whether free or paid consultation is offered).\n\n**Contact Flow**: Multi-step contact process where users fill out intake form first, then see appropriate booking options based on their responses.\n\n**Content Management**: Structured content for services, industries, testimonials, and blog posts with proper TypeScript interfaces.\n\n## Development & Deployment\n\n**Build Process**: Vite handles frontend bundling, esbuild compiles the backend, with separate development and production configurations.\n\n**Development Tools**: Replit-specific plugins for development experience, runtime error overlays, and cartographer integration.\n\n**Type Safety**: Comprehensive TypeScript coverage with shared types between client and server, path mapping for clean imports.\n\n# External Dependencies\n\n## Database & Storage\n- **Neon Database**: PostgreSQL hosting (configured via @neondatabase/serverless)\n- **Drizzle ORM**: Database ORM and query builder with PostgreSQL dialect\n\n## UI & Styling\n- **Tailwind CSS**: Utility-first CSS framework with custom brand configuration\n- **shadcn/ui**: Component library built on Radix UI primitives\n- **Radix UI**: Accessible component primitives for complex UI elements\n- **Lucide React**: Icon library for consistent iconography\n\n## Frontend Libraries\n- **TanStack Query**: Server state management and caching\n- **React Hook Form**: Form handling with @hookform/resolvers for validation\n- **Wouter**: Lightweight client-side routing\n- **date-fns**: Date manipulation and formatting\n\n## Development Tools\n- **Vite**: Frontend build tool and development server\n- **esbuild**: Fast JavaScript bundler for backend compilation\n- **tsx**: TypeScript execution for development server\n\n## External Fonts & Icons\n- **Google Fonts**: Inter and Sora font families\n- **Font Awesome**: Icon library via CDN for enhanced iconography\n\n## Replit Integration\n- **Replit Dev Banner**: Development environment integration\n- **Vite Plugin Runtime Error Modal**: Enhanced error reporting in development\n- **Cartographer Plugin**: Replit-specific development tooling","size_bytes":4377},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      boxShadow: {\n        'subtle': '0 2px 8px rgba(0, 0, 0, 0.1)',\n        'soft': '0 4px 12px rgba(0, 0, 0, 0.15)',\n        'depth': '0 8px 24px rgba(0, 0, 0, 0.12), 0 2px 6px rgba(0, 0, 0, 0.08)',\n        'floating': '0 12px 32px rgba(0, 0, 0, 0.15), 0 4px 8px rgba(0, 0, 0, 0.1)',\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        nb: {\n          bg: \"var(--nb-bg)\",\n          card: \"var(--nb-card)\",\n          primary: \"var(--nb-primary)\",\n          accent: \"var(--nb-accent)\",\n          text: \"var(--nb-text)\",\n          muted: \"var(--nb-muted)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        sora: [\"var(--font-heading)\"],\n        'source-sans': [\"'Source Sans Pro'\", \"sans-serif\"],\n        inter: [\"var(--font-sans)\"],\n      },\n      backgroundImage: {\n        'gradient-brand': 'linear-gradient(135deg, #FF4FD8 0%, #A855F7 50%, #7B2DFF 100%)',\n        'gradient-glow': 'radial-gradient(circle at center, rgba(123, 45, 255, 0.3) 0%, transparent 70%)',\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        \"glow-pulse\": {\n          \"0%\": { boxShadow: \"0 0 20px rgba(123, 45, 255, 0.4)\" },\n          \"100%\": { boxShadow: \"0 0 40px rgba(123, 45, 255, 0.6)\" }\n        },\n        \"float\": {\n          \"0%, 100%\": { transform: \"translateY(0px)\" },\n          \"50%\": { transform: \"translateY(-10px)\" }\n        }\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"glow-pulse\": \"glow-pulse 2s ease-in-out infinite alternate\",\n        \"float\": \"float 3s ease-in-out infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4094},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertContactInquirySchema } from \"@shared/schema\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Contact form submission endpoint\n  app.post(\"/api/contact\", async (req, res) => {\n    try {\n      const validatedData = insertContactInquirySchema.parse(req.body);\n      const inquiry = await storage.createContactInquiry(validatedData);\n      \n      res.status(201).json({\n        success: true,\n        message: \"Contact inquiry submitted successfully\",\n        id: inquiry.id\n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({\n          success: false,\n          message: \"Validation error\",\n          errors: error.errors\n        });\n      } else {\n        console.error(\"Contact form submission error:\", error);\n        res.status(500).json({\n          success: false,\n          message: \"Internal server error\"\n        });\n      }\n    }\n  });\n\n  // Get all contact inquiries (for admin/internal use)\n  app.get(\"/api/contact\", async (req, res) => {\n    try {\n      const inquiries = await storage.getAllContactInquiries();\n      res.json(inquiries);\n    } catch (error) {\n      console.error(\"Error fetching contact inquiries:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"Internal server error\"\n      });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":1564},"server/storage.ts":{"content":"import { type User, type InsertUser, type ContactInquiry, type InsertContactInquiry } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  createContactInquiry(inquiry: InsertContactInquiry): Promise<ContactInquiry>;\n  getAllContactInquiries(): Promise<ContactInquiry[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private contactInquiries: Map<string, ContactInquiry>;\n\n  constructor() {\n    this.users = new Map();\n    this.contactInquiries = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async createContactInquiry(insertInquiry: InsertContactInquiry): Promise<ContactInquiry> {\n    const id = randomUUID();\n    const inquiry: ContactInquiry = {\n      ...insertInquiry,\n      id,\n      message: insertInquiry.message || null,\n      createdAt: new Date()\n    };\n    this.contactInquiries.set(id, inquiry);\n    return inquiry;\n  }\n\n  async getAllContactInquiries(): Promise<ContactInquiry[]> {\n    return Array.from(this.contactInquiries.values()).sort(\n      (a, b) => b.createdAt.getTime() - a.createdAt.getTime()\n    );\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1812},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp, jsonb } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const contactInquiries = pgTable(\"contact_inquiries\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  company: text(\"company\").notNull(),\n  companySize: text(\"company_size\"),\n  currentItSetup: jsonb(\"current_it_setup\").$type<string[]>(),\n  urgency: text(\"urgency\"),\n  message: text(\"message\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertContactInquirySchema = createInsertSchema(contactInquiries).pick({\n  name: true,\n  email: true,\n  company: true,\n  companySize: true,\n  currentItSetup: true,\n  urgency: true,\n  message: true,\n}).extend({\n  name: z.string().min(1, \"Name is required\"),\n  email: z.string().email(\"Invalid email address\"),\n  company: z.string().min(1, \"Company name is required\"),\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertContactInquiry = z.infer<typeof insertContactInquirySchema>;\nexport type ContactInquiry = typeof contactInquiries.$inferSelect;\n","size_bytes":1588},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NavBar from \"@/components/layout/NavBar\";\nimport Footer from \"@/components/layout/Footer\";\nimport Home from \"@/pages/Home\";\nimport About from \"@/pages/About\";\nimport Contact from \"@/pages/Contact\";\nimport Services from \"@/pages/Services\";\nimport Industries from \"@/pages/Industries\";\nimport Resources from \"@/pages/Resources\";\nimport Blog from \"@/pages/Blog\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/services\" component={Services} />\n      <Route path=\"/industries\" component={Industries} />\n      <Route path=\"/resources\" component={Resources} />\n      <Route path=\"/blog\" component={Blog} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <div className=\"min-h-screen bg-nb-bg text-nb-text\">\n          <NavBar />\n          <Router />\n          <Footer />\n        </div>\n        <Toaster />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1467},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Sora:wght@400;500;600;700;800&display=swap');\n\n@font-face {\n  font-family: 'Source Sans Pro';\n  src: url('@assets/SourceSans_1754808139841.ttf') format('truetype');\n  font-weight: normal;\n  font-style: normal;\n  font-display: swap;\n}\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(237, 54%, 5%);\n  --foreground: hsl(256, 33%, 92%);\n  --card: hsl(243, 39%, 8%);\n  --card-foreground: hsl(256, 33%, 92%);\n  --popover: hsl(237, 54%, 5%);\n  --popover-foreground: hsl(256, 33%, 92%);\n  --primary: hsl(263, 70%, 58%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(210, 25%, 7.8431%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(240, 1.9608%, 90%);\n  --muted-foreground: hsl(255, 15%, 85%);\n  --accent: hsl(263, 45%, 45%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(356.3033, 90.5579%, 54.3137%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(201.4286, 30.4348%, 90.9804%);\n  --input: hsl(200, 23.0769%, 97.4510%);\n  --ring: hsl(263, 70%, 58%);\n  --chart-1: hsl(203.8863, 88.2845%, 53.1373%);\n  --chart-2: hsl(159.7826, 100%, 36.0784%);\n  --chart-3: hsl(42.0290, 92.8251%, 56.2745%);\n  --chart-4: hsl(147.1429, 78.5047%, 41.9608%);\n  --chart-5: hsl(341.4894, 75.2000%, 50.9804%);\n  --sidebar: hsl(180, 6.6667%, 97.0588%);\n  --sidebar-foreground: hsl(210, 25%, 7.8431%);\n  --sidebar-primary: hsl(203.8863, 88.2845%, 53.1373%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(211.5789, 51.3514%, 92.7451%);\n  --sidebar-accent-foreground: hsl(203.8863, 88.2845%, 53.1373%);\n  --sidebar-border: hsl(205.0000, 25.0000%, 90.5882%);\n  --sidebar-ring: hsl(202.8169, 89.1213%, 53.1373%);\n  --font-sans: Inter, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --font-heading: 'Source Sans Pro', sans-serif;\n  --radius: 0.5rem;\n  \n  /* NiftyByte Brand Colors */\n  --nb-bg: hsl(237, 54%, 5%);\n  --nb-card: hsl(243, 39%, 8%);\n  --nb-primary: hsl(263, 70%, 58%);\n  --nb-accent: hsl(310, 80%, 65%);\n  --nb-text: hsl(256, 33%, 92%);\n  --nb-muted: hsl(255, 15%, 85%);\n}\n\n.dark {\n  --background: hsl(237, 54%, 5%);\n  --foreground: hsl(256, 33%, 92%);\n  --card: hsl(243, 39%, 8%);\n  --card-foreground: hsl(256, 33%, 92%);\n  --popover: hsl(237, 54%, 5%);\n  --popover-foreground: hsl(256, 33%, 92%);\n  --primary: hsl(263, 70%, 58%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(195.0000, 15.3846%, 94.9020%);\n  --secondary-foreground: hsl(210, 25%, 7.8431%);\n  --muted: hsl(0, 0%, 9.4118%);\n  --muted-foreground: hsl(255, 15%, 85%);\n  --accent: hsl(310, 80%, 65%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(356.3033, 90.5579%, 54.3137%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(210, 5.2632%, 14.9020%);\n  --input: hsl(207.6923, 27.6596%, 18.4314%);\n  --ring: hsl(263, 70%, 58%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-nb-bg text-nb-text;\n    background-color: var(--nb-bg);\n    color: var(--nb-text);\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-family: var(--font-heading);\n  }\n}\n\n@layer components {\n  .glow-button {\n    @apply bg-gradient-to-r from-pink-400 via-nb-accent to-nb-primary text-white font-semibold rounded transition-all duration-300;\n  }\n  \n  .glow-button:hover {\n    @apply -translate-y-0.5 shadow-[0_0_20px_rgba(255,79,216,0.4)];\n  }\n\n  .glow-card {\n    @apply backdrop-blur-md rounded transition-all duration-300;\n    background-color: rgba(18, 16, 37, 0.8);\n    border: 1px solid rgba(123, 45, 255, 0.1);\n  }\n\n  .glow-card:hover {\n    border-color: rgba(255, 79, 216, 0.2);\n  }\n\n  .text-gradient {\n    @apply bg-gradient-to-r from-nb-accent to-nb-primary bg-clip-text text-transparent;\n  }\n\n  .bg-noise {\n    position: relative;\n  }\n\n  .bg-noise::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-image: url('data:image/svg+xml,%3Csvg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cfilter id=\"noise\"%3E%3CfeTurbulence type=\"fractalNoise\" baseFrequency=\"0.9\" numOctaves=\"4\" stitchTiles=\"stitch\"/%3E%3C/filter%3E%3Crect width=\"100%25\" height=\"100%25\" filter=\"url(%23noise)\" opacity=\"0.05\"/%3E%3C/svg%3E');\n    pointer-events: none;\n  }\n\n  .animate-glow-pulse {\n    animation: glow-pulse 2s ease-in-out infinite alternate;\n  }\n\n  .animate-float {\n    animation: float 3s ease-in-out infinite;\n  }\n\n  @keyframes glow-pulse {\n    0% { box-shadow: 0 0 20px rgba(123, 45, 255, 0.4); }\n    100% { box-shadow: 0 0 40px rgba(123, 45, 255, 0.6); }\n  }\n\n  @keyframes float {\n    0%, 100% { transform: translateY(0px); }\n    50% { transform: translateY(-10px); }\n  }\n\n  .hover\\:glow:hover {\n    box-shadow: \n      0 0 30px rgba(217, 70, 239, 0.6),\n      0 0 60px rgba(139, 69, 255, 0.4),\n      0 0 90px rgba(217, 70, 239, 0.2);\n  }\n\n  .bg-gradient-brand {\n    background: linear-gradient(135deg, #FF4FD8 0%, #7B2DFF 50%, #3C1B86 100%);\n  }\n}\n\n@layer utilities {\n  .nb-bg {\n    background-color: var(--nb-bg);\n  }\n  \n  .nb-card {\n    background-color: var(--nb-card);\n  }\n  \n  .nb-primary {\n    color: var(--nb-primary);\n  }\n  \n  .nb-accent {\n    color: var(--nb-accent);\n  }\n  \n  .nb-text {\n    color: var(--nb-text);\n  }\n  \n  .nb-muted {\n    color: var(--nb-muted);\n  }\n\n  .bg-nb-bg {\n    background-color: var(--nb-bg);\n  }\n  \n  .bg-nb-card {\n    background-color: var(--nb-card);\n  }\n  \n  .bg-nb-primary {\n    background-color: var(--nb-primary);\n  }\n  \n  .bg-nb-accent {\n    background-color: var(--nb-accent);\n  }\n  \n  .text-nb-text {\n    color: var(--nb-text);\n  }\n  \n  .text-nb-muted {\n    color: var(--nb-muted);\n  }\n  \n  .text-nb-primary {\n    color: var(--nb-primary);\n  }\n  \n  .text-nb-accent {\n    color: var(--nb-accent);\n  }\n\n  .border-nb-primary {\n    border-color: var(--nb-primary);\n  }\n  \n  .border-nb-accent {\n    border-color: var(--nb-accent);\n  }\n}\n","size_bytes":6003},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/About.tsx":{"content":"import { GradientText } from \"@/components/ui/gradient-text\";\nimport { GlowCard } from \"@/components/ui/glow-card\";\n\nexport default function About() {\n  const leadership = [\n    {\n      name: \"Sarah Johnson\",\n      title: \"CEO & Founder\",\n      bio: \"20+ years in enterprise IT consulting with expertise in digital transformation.\",\n      image: \"SJ\"\n    },\n    {\n      name: \"Michael Chen\", \n      title: \"CTO\",\n      bio: \"Former Microsoft architect specializing in cloud infrastructure and cybersecurity.\",\n      image: \"MC\"\n    },\n    {\n      name: \"Emily Rodriguez\",\n      title: \"VP of Operations\", \n      bio: \"Operations expert with a track record of scaling consulting practices.\",\n      image: \"ER\"\n    }\n  ];\n\n  const values = [\n    {\n      icon: \"fas fa-handshake\",\n      title: \"Trust & Transparency\",\n      description: \"We build lasting relationships through honest communication and reliable delivery.\"\n    },\n    {\n      icon: \"fas fa-lightbulb\",\n      title: \"Innovation First\",\n      description: \"We stay ahead of technology trends to provide cutting-edge solutions.\"\n    },\n    {\n      icon: \"fas fa-users\",\n      title: \"Client Success\",\n      description: \"Your success is our success. We're invested in your long-term growth.\"\n    },\n    {\n      icon: \"fas fa-shield-alt\",\n      title: \"Security Focus\",\n      description: \"Security isn't an afterthought - it's built into everything we do.\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section with Gradient */}\n      <section className=\"relative py-20 bg-gradient-to-br from-nb-primary/20 to-nb-accent/20 mt-16\">\n        <div className=\"absolute inset-0 bg-nb-bg/90\"></div>\n        <div className=\"relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"font-sora font-bold text-4xl sm:text-5xl lg:text-6xl mb-6\" data-testid=\"about-hero-title\">\n            About <GradientText>NiftyByte Technologies</GradientText>\n          </h1>\n          <p className=\"text-xl text-nb-muted max-w-3xl mx-auto\" data-testid=\"about-hero-subtitle\">\n            Transforming businesses through technology excellence since 2009\n          </p>\n        </div>\n      </section>\n\n      {/* Story Section - White Background */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"font-sora font-bold text-3xl sm:text-4xl mb-6 text-gray-900\" data-testid=\"about-story-title\">\n                Our Story\n              </h2>\n              <div className=\"space-y-4 text-nb-muted leading-relaxed\">\n                <p data-testid=\"about-story-p1\">\n                  Founded in 2009, NiftyByte Technologies began with a simple mission: to help businesses harness the power of technology to drive growth and innovation. What started as a small consulting firm has grown into a trusted partner for organizations across multiple industries.\n                </p>\n                <p data-testid=\"about-story-p2\">\n                  Over the years, we've helped hundreds of companies navigate digital transformation, strengthen their cybersecurity posture, and optimize their IT infrastructure. Our approach combines deep technical expertise with a genuine understanding of business needs.\n                </p>\n                <p data-testid=\"about-story-p3\">\n                  Today, we're proud to be recognized as a leading IT consulting firm, but our core values remain unchanged: putting our clients first, delivering exceptional results, and staying at the forefront of technology innovation.\n                </p>\n              </div>\n            </div>\n            <div className=\"relative\">\n              <div className=\"w-full h-96 bg-gradient-to-br from-nb-primary/10 to-nb-accent/10 rounded-2xl flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <div className=\"text-6xl font-sora font-bold text-gray-800 mb-2\">15+</div>\n                  <div className=\"text-gray-600\">Years of Excellence</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Leadership Section - White Background */}\n      <section className=\"py-20 bg-white border-t border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-sora font-bold text-3xl sm:text-4xl mb-6 text-gray-900\" data-testid=\"about-leadership-title\">\n              Leadership Team\n            </h2>\n            <p className=\"text-xl text-nb-muted max-w-3xl mx-auto\" data-testid=\"about-leadership-subtitle\">\n              Meet the experts driving our vision forward\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {leadership.map((leader, index) => (\n              <div key={leader.name} className=\"text-center bg-gray-50 rounded-2xl p-8\" data-testid={`leadership-card-${index}`}>\n                <div className=\"w-24 h-24 bg-gradient-to-br from-nb-primary to-nb-accent rounded-full flex items-center justify-center mx-auto mb-6\">\n                  <span className=\"text-2xl font-bold text-white\">{leader.image}</span>\n                </div>\n                <h3 className=\"font-sora font-bold text-xl mb-2 text-gray-900\" data-testid={`leadership-name-${index}`}>{leader.name}</h3>\n                <p className=\"text-nb-primary font-semibold mb-4\" data-testid={`leadership-title-${index}`}>{leader.title}</p>\n                <p className=\"text-nb-muted leading-relaxed\" data-testid={`leadership-bio-${index}`}>{leader.bio}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Values Section - White Background */}\n      <section className=\"py-20 bg-white border-t border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-sora font-bold text-3xl sm:text-4xl mb-6 text-gray-900\" data-testid=\"about-values-title\">\n              Our Values\n            </h2>\n            <p className=\"text-xl text-nb-muted max-w-3xl mx-auto\" data-testid=\"about-values-subtitle\">\n              The principles that guide everything we do\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {values.map((value, index) => (\n              <div key={value.title} className=\"text-center\" data-testid={`value-card-${index}`}>\n                <div className=\"w-16 h-16 bg-gradient-to-br from-nb-primary to-nb-accent rounded-2xl flex items-center justify-center mx-auto mb-6\">\n                  <i className={`${value.icon} text-2xl text-white`}></i>\n                </div>\n                <h3 className=\"font-sora font-bold text-lg mb-4 text-gray-900\" data-testid={`value-title-${index}`}>{value.title}</h3>\n                <p className=\"text-nb-muted leading-relaxed\" data-testid={`value-description-${index}`}>{value.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Awards Section - White Background */}\n      <section className=\"py-20 bg-white border-t border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"font-sora font-bold text-3xl sm:text-4xl mb-12 text-gray-900\" data-testid=\"about-awards-title\">\n            Awards & Recognition\n          </h2>\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <div className=\"p-6\" data-testid=\"award-1\">\n              <i className=\"fas fa-trophy text-4xl text-nb-accent mb-4\"></i>\n              <h3 className=\"font-semibold text-lg text-gray-900 mb-2\">Best IT Consulting Firm 2023</h3>\n              <p className=\"text-gray-600\">TechCrunch Awards</p>\n            </div>\n            <div className=\"p-6\" data-testid=\"award-2\">\n              <i className=\"fas fa-medal text-4xl text-nb-primary mb-4\"></i>\n              <h3 className=\"font-semibold text-lg text-gray-900 mb-2\">Innovation Excellence Award</h3>\n              <p className=\"text-gray-600\">Digital Transformation Summit</p>\n            </div>\n            <div className=\"p-6\" data-testid=\"award-3\">\n              <i className=\"fas fa-star text-4xl text-nb-accent mb-4\"></i>\n              <h3 className=\"font-semibold text-lg text-gray-900 mb-2\">Client Satisfaction Leader</h3>\n              <p className=\"text-gray-600\">Industry Review Board</p>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":8665},"client/src/pages/Blog.tsx":{"content":"import { GlowCard } from \"@/components/ui/glow-card\";\nimport { GlowButton } from \"@/components/ui/glow-button\";\nimport { GradientText } from \"@/components/ui/gradient-text\";\n\nexport default function Blog() {\n  const blogPosts = [\n    {\n      title: \"The Future of IT Infrastructure: Trends for 2024\",\n      excerpt: \"Explore the latest trends shaping IT infrastructure, from edge computing to sustainable technology practices.\",\n      author: \"Sarah Johnson\",\n      date: \"March 15, 2024\",\n      category: \"Infrastructure\",\n      readTime: \"5 min read\",\n      image: \"📊\"\n    },\n    {\n      title: \"Cybersecurity in the Age of Remote Work\",\n      excerpt: \"How to protect your organization when employees work from anywhere. Essential security strategies and tools.\",\n      author: \"Michael Chen\", \n      date: \"March 10, 2024\",\n      category: \"Security\",\n      readTime: \"7 min read\",\n      image: \"🔒\"\n    },\n    {\n      title: \"Cloud Migration: Common Pitfalls and How to Avoid Them\",\n      excerpt: \"Learn from real-world experiences and avoid the most common mistakes organizations make during cloud migration.\",\n      author: \"Emily Rodriguez\",\n      date: \"March 5, 2024\",\n      category: \"Cloud\",\n      readTime: \"6 min read\",\n      image: \"☁️\"\n    },\n    {\n      title: \"AI and Machine Learning in Business Operations\",\n      excerpt: \"Practical applications of AI and ML that are transforming how businesses operate and compete.\",\n      author: \"Sarah Johnson\",\n      date: \"February 28, 2024\",\n      category: \"Innovation\",\n      readTime: \"8 min read\",\n      image: \"🤖\"\n    },\n    {\n      title: \"HIPAA Compliance: A Complete Guide for Healthcare IT\",\n      excerpt: \"Everything healthcare organizations need to know about maintaining HIPAA compliance in their IT systems.\",\n      author: \"Michael Chen\",\n      date: \"February 20, 2024\",\n      category: \"Compliance\",\n      readTime: \"10 min read\",\n      image: \"🏥\"\n    },\n    {\n      title: \"Digital Transformation ROI: Measuring Success\",\n      excerpt: \"Key metrics and strategies for measuring the return on investment of your digital transformation initiatives.\",\n      author: \"Emily Rodriguez\",\n      date: \"February 15, 2024\",\n      category: \"Strategy\",\n      readTime: \"5 min read\",\n      image: \"📈\"\n    }\n  ];\n\n  const categories = [\"All\", \"Infrastructure\", \"Security\", \"Cloud\", \"Innovation\", \"Compliance\", \"Strategy\"];\n  const featuredPost = blogPosts[0];\n  const regularPosts = blogPosts.slice(1);\n\n  return (\n    <div className=\"min-h-screen bg-nb-bg pt-20\">\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-nb-primary/20 to-nb-accent/20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"font-sora font-bold text-4xl sm:text-5xl lg:text-6xl mb-6\" data-testid=\"blog-hero-title\">\n            Tech <GradientText>Insights</GradientText> & Updates\n          </h1>\n          <p className=\"text-xl text-nb-muted max-w-3xl mx-auto\" data-testid=\"blog-hero-subtitle\">\n            Stay ahead of the curve with expert insights, industry trends, and practical advice from our team\n          </p>\n        </div>\n      </section>\n\n      {/* Featured Post */}\n      <section className=\"py-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <h2 className=\"font-sora font-bold text-2xl mb-8 text-nb-text\" data-testid=\"blog-featured-title\">Featured Article</h2>\n          <GlowCard className=\"p-8 hover:scale-105 transition-all duration-300\" data-testid=\"blog-featured-post\">\n            <div className=\"grid lg:grid-cols-2 gap-8 items-center\">\n              <div>\n                <div className=\"flex items-center gap-4 mb-4\">\n                  <span className=\"px-3 py-1 bg-nb-primary/20 text-nb-primary rounded-full text-sm font-medium\" data-testid=\"blog-featured-category\">\n                    {featuredPost.category}\n                  </span>\n                  <span className=\"text-nb-muted text-sm\" data-testid=\"blog-featured-readtime\">{featuredPost.readTime}</span>\n                </div>\n                \n                <h3 className=\"font-sora font-bold text-2xl mb-4 text-nb-text\" data-testid=\"blog-featured-post-title\">\n                  {featuredPost.title}\n                </h3>\n                \n                <p className=\"text-nb-muted mb-6 leading-relaxed\" data-testid=\"blog-featured-excerpt\">\n                  {featuredPost.excerpt}\n                </p>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-10 h-10 bg-gradient-brand rounded-full flex items-center justify-center\">\n                      <span className=\"text-sm font-bold text-white\">{featuredPost.author.split(' ').map(n => n[0]).join('')}</span>\n                    </div>\n                    <div>\n                      <p className=\"font-medium text-nb-text\" data-testid=\"blog-featured-author\">{featuredPost.author}</p>\n                      <p className=\"text-sm text-nb-muted\" data-testid=\"blog-featured-date\">{featuredPost.date}</p>\n                    </div>\n                  </div>\n                  <GlowButton variant=\"secondary\" data-testid=\"blog-featured-read-more\">\n                    Read More\n                  </GlowButton>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center justify-center\">\n                <div className=\"w-full h-64 bg-gradient-to-br from-nb-primary/10 to-nb-accent/10 rounded-2xl flex items-center justify-center\">\n                  <span className=\"text-6xl\">{featuredPost.image}</span>\n                </div>\n              </div>\n            </div>\n          </GlowCard>\n        </div>\n      </section>\n\n      {/* Category Filter */}\n      <section className=\"pb-8\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex flex-wrap gap-3 justify-center\" data-testid=\"blog-category-filter\">\n            {categories.map((category, index) => (\n              <button\n                key={category}\n                className={`px-4 py-2 rounded-full text-sm font-medium transition-all duration-300 ${\n                  index === 0 \n                    ? 'bg-nb-primary text-white' \n                    : 'bg-nb-surface border border-nb-primary/20 text-nb-muted hover:border-nb-primary hover:text-nb-primary'\n                }`}\n                data-testid={`blog-category-${index}`}\n              >\n                {category}\n              </button>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Blog Posts Grid */}\n      <section className=\"pb-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {regularPosts.map((post, index) => (\n              <GlowCard key={post.title} className=\"p-6 hover:scale-105 transition-all duration-300\" data-testid={`blog-post-card-${index}`}>\n                <div className=\"flex items-center justify-between mb-4\">\n                  <span className=\"px-3 py-1 bg-nb-primary/20 text-nb-primary rounded-full text-sm font-medium\" data-testid={`blog-post-category-${index}`}>\n                    {post.category}\n                  </span>\n                  <span className=\"text-nb-muted text-sm\" data-testid={`blog-post-readtime-${index}`}>{post.readTime}</span>\n                </div>\n\n                <div className=\"w-full h-40 bg-gradient-to-br from-nb-primary/10 to-nb-accent/10 rounded-lg flex items-center justify-center mb-4\">\n                  <span className=\"text-4xl\">{post.image}</span>\n                </div>\n                \n                <h3 className=\"font-sora font-bold text-lg mb-3 text-nb-text\" data-testid={`blog-post-title-${index}`}>\n                  {post.title}\n                </h3>\n                \n                <p className=\"text-nb-muted mb-4 leading-relaxed text-sm\" data-testid={`blog-post-excerpt-${index}`}>\n                  {post.excerpt}\n                </p>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-8 h-8 bg-gradient-brand rounded-full flex items-center justify-center\">\n                      <span className=\"text-xs font-bold text-white\">{post.author.split(' ').map(n => n[0]).join('')}</span>\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-medium text-nb-text\" data-testid={`blog-post-author-${index}`}>{post.author}</p>\n                      <p className=\"text-xs text-nb-muted\" data-testid={`blog-post-date-${index}`}>{post.date}</p>\n                    </div>\n                  </div>\n                  <GlowButton variant=\"secondary\" size=\"sm\" data-testid={`blog-post-read-more-${index}`}>\n                    Read\n                  </GlowButton>\n                </div>\n              </GlowCard>\n            ))}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":9096},"client/src/pages/Contact.tsx":{"content":"import IntakeForm from \"@/components/booking/IntakeForm\";\nimport BookingWidget from \"@/components/booking/BookingWidget\";\nimport { GradientText } from \"@/components/ui/gradient-text\";\nimport { useState } from \"react\";\n\nexport default function Contact() {\n  const [formCompleted, setFormCompleted] = useState(false);\n  const [formData, setFormData] = useState(null);\n\n  const handleFormSubmit = (data: any) => {\n    setFormData(data);\n    setFormCompleted(true);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-nb-bg pt-20\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20\">\n        <div className=\"text-center mb-16\">\n          <h1 className=\"font-sora font-bold text-4xl sm:text-5xl lg:text-6xl mb-6 text-nb-text\" data-testid=\"contact-page-title\">\n            Ready to Get <GradientText>Started?</GradientText>\n          </h1>\n          <p className=\"text-xl text-nb-muted max-w-3xl mx-auto\" data-testid=\"contact-page-subtitle\">\n            Schedule a consultation to discuss your IT challenges and discover how we can help\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-2 gap-12 items-start\">\n          <IntakeForm onSubmit={handleFormSubmit} />\n          <BookingWidget formCompleted={formCompleted} formData={formData} />\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":1321},"client/src/pages/Home.tsx":{"content":"import Hero from \"@/components/sections/Hero\";\nimport ServicesPreview from \"@/components/sections/ServicesPreview\";\nimport IndustriesPreview from \"@/components/sections/IndustriesPreview\";\nimport ProcessSection from \"@/components/sections/ProcessSection\";\nimport TestimonialsSection from \"@/components/sections/TestimonialsSection\";\nimport ContactPreview from \"@/components/sections/ContactPreview\";\nimport FinalCTA from \"@/components/sections/FinalCTA\";\n\nexport default function Home() {\n  return (\n    <div className=\"min-h-screen\">\n      <Hero />\n      <ServicesPreview />\n      <IndustriesPreview />\n      <ProcessSection />\n      <TestimonialsSection />\n      <ContactPreview />\n      <FinalCTA />\n    </div>\n  );\n}","size_bytes":720},"client/src/pages/Industries.tsx":{"content":"import { GlowCard } from \"@/components/ui/glow-card\";\nimport { GlowButton } from \"@/components/ui/glow-button\";\nimport { GradientText } from \"@/components/ui/gradient-text\";\n\nexport default function Industries() {\n  const industries = [\n    {\n      icon: \"fas fa-heartbeat\",\n      title: \"Healthcare\",\n      description: \"HIPAA-compliant IT solutions for medical practices, hospitals, and healthcare organizations\",\n      challenges: [\n        \"HIPAA compliance requirements\",\n        \"Patient data security\",\n        \"Legacy system integration\",\n        \"Telehealth implementation\"\n      ],\n      solutions: [\n        \"Secure cloud infrastructure\",\n        \"HIPAA-compliant email systems\",\n        \"Electronic health records (EHR)\",\n        \"Telemedicine platforms\",\n        \"Data backup & recovery\",\n        \"Cybersecurity training\"\n      ],\n      outcomes: [\n        \"100% HIPAA compliance\",\n        \"50% reduction in data breaches\",\n        \"Improved patient care efficiency\"\n      ]\n    },\n    {\n      icon: \"fas fa-university\",\n      title: \"Financial Services\",\n      description: \"Secure, compliant technology solutions for banks, credit unions, and financial institutions\",\n      challenges: [\n        \"Regulatory compliance (SOX, PCI DSS)\",\n        \"Fraud prevention\",\n        \"Digital banking transformation\",\n        \"Legacy system modernization\"\n      ],\n      solutions: [\n        \"Multi-factor authentication\",\n        \"Fraud detection systems\",\n        \"Core banking modernization\",\n        \"Digital payment platforms\",\n        \"Risk management tools\",\n        \"Compliance monitoring\"\n      ],\n      outcomes: [\n        \"Zero compliance violations\",\n        \"75% reduction in fraud incidents\",\n        \"Faster transaction processing\"\n      ]\n    },\n    {\n      icon: \"fas fa-graduation-cap\",\n      title: \"Education\",\n      description: \"Modern learning technology for schools, universities, and educational institutions\",\n      challenges: [\n        \"Remote learning infrastructure\",\n        \"Student data privacy\",\n        \"Budget constraints\",\n        \"Technology adoption\"\n      ],\n      solutions: [\n        \"Learning management systems\",\n        \"Virtual classroom platforms\",\n        \"Student information systems\",\n        \"Network infrastructure\",\n        \"Device management\",\n        \"Digital security training\"\n      ],\n      outcomes: [\n        \"Seamless remote learning\",\n        \"Improved student engagement\",\n        \"Cost-effective IT operations\"\n      ]\n    },\n    {\n      icon: \"fas fa-industry\",\n      title: \"Manufacturing\",\n      description: \"Smart factory solutions and industrial IoT for modern manufacturing operations\",\n      challenges: [\n        \"Industry 4.0 transformation\",\n        \"Operational technology security\",\n        \"Supply chain integration\",\n        \"Equipment monitoring\"\n      ],\n      solutions: [\n        \"Industrial IoT platforms\",\n        \"Predictive maintenance systems\",\n        \"ERP integration\",\n        \"Quality management systems\",\n        \"Supply chain optimization\",\n        \"Cybersecurity for OT\"\n      ],\n      outcomes: [\n        \"30% increase in productivity\",\n        \"Reduced equipment downtime\",\n        \"Improved quality control\"\n      ]\n    },\n    {\n      icon: \"fas fa-shopping-cart\",\n      title: \"Retail & E-commerce\",\n      description: \"Digital commerce solutions and customer experience platforms for retail businesses\",\n      challenges: [\n        \"Omnichannel integration\",\n        \"Payment processing security\",\n        \"Inventory management\",\n        \"Customer data protection\"\n      ],\n      solutions: [\n        \"E-commerce platforms\",\n        \"Point-of-sale systems\",\n        \"Inventory management\",\n        \"Customer relationship management\",\n        \"Payment security\",\n        \"Analytics & reporting\"\n      ],\n      outcomes: [\n        \"Unified customer experience\",\n        \"Increased online sales\",\n        \"Better inventory optimization\"\n      ]\n    },\n    {\n      icon: \"fas fa-gavel\",\n      title: \"Legal Services\",\n      description: \"Secure document management and case management systems for law firms\",\n      challenges: [\n        \"Client confidentiality\",\n        \"Document security\",\n        \"Case management efficiency\",\n        \"Compliance requirements\"\n      ],\n      solutions: [\n        \"Legal practice management\",\n        \"Secure document storage\",\n        \"Client communication platforms\",\n        \"Time tracking & billing\",\n        \"E-discovery tools\",\n        \"Compliance monitoring\"\n      ],\n      outcomes: [\n        \"Enhanced client confidentiality\",\n        \"Streamlined case management\",\n        \"Improved billing accuracy\"\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-nb-bg pt-20\">\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-nb-primary/20 to-nb-accent/20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"font-sora font-bold text-4xl sm:text-5xl lg:text-6xl mb-6\" data-testid=\"industries-hero-title\">\n            Industries We <GradientText>Serve</GradientText>\n          </h1>\n          <p className=\"text-xl text-nb-muted max-w-3xl mx-auto\" data-testid=\"industries-hero-subtitle\">\n            Specialized technology solutions tailored to your industry's unique challenges and compliance requirements\n          </p>\n        </div>\n      </section>\n\n      {/* Industries Grid */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {industries.map((industry, index) => (\n              <GlowCard key={industry.title} className=\"p-8 hover:scale-105 transition-all duration-300\" data-testid={`industry-detail-card-${index}`}>\n                <div className=\"w-16 h-16 bg-gradient-brand rounded-2xl flex items-center justify-center mb-6\">\n                  <i className={`${industry.icon} text-2xl text-white`}></i>\n                </div>\n                \n                <h3 className=\"font-sora font-bold text-2xl mb-4 text-nb-text\" data-testid={`industry-detail-title-${index}`}>\n                  {industry.title}\n                </h3>\n                \n                <p className=\"text-nb-muted mb-6 leading-relaxed\" data-testid={`industry-detail-description-${index}`}>\n                  {industry.description}\n                </p>\n\n                <div className=\"mb-6\">\n                  <h4 className=\"font-semibold text-nb-text mb-3\">Common Challenges:</h4>\n                  <ul className=\"space-y-2 text-nb-muted text-sm\">\n                    {industry.challenges.map((challenge, challengeIndex) => (\n                      <li key={challengeIndex} className=\"flex items-center\" data-testid={`industry-challenge-${index}-${challengeIndex}`}>\n                        <i className=\"fas fa-exclamation-triangle text-yellow-400 mr-2\"></i> {challenge}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n\n                <div className=\"mb-6\">\n                  <h4 className=\"font-semibold text-nb-text mb-3\">Our Solutions:</h4>\n                  <ul className=\"space-y-2 text-nb-muted text-sm\">\n                    {industry.solutions.map((solution, solutionIndex) => (\n                      <li key={solutionIndex} className=\"flex items-center\" data-testid={`industry-solution-${index}-${solutionIndex}`}>\n                        <i className=\"fas fa-check text-nb-accent mr-2\"></i> {solution}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n\n                <div className=\"mb-6\">\n                  <h4 className=\"font-semibold text-nb-text mb-3\">Typical Results:</h4>\n                  <ul className=\"space-y-2 text-nb-muted text-sm\">\n                    {industry.outcomes.map((outcome, outcomeIndex) => (\n                      <li key={outcomeIndex} className=\"flex items-center\" data-testid={`industry-outcome-${index}-${outcomeIndex}`}>\n                        <i className=\"fas fa-arrow-up text-green-400 mr-2\"></i> {outcome}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n\n                <GlowButton size=\"sm\" className=\"w-full\" data-testid={`industry-detail-cta-${index}`}>\n                  Learn More\n                </GlowButton>\n              </GlowCard>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-gradient-to-r from-nb-primary/20 to-nb-accent/20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"font-sora font-bold text-3xl sm:text-4xl mb-6\" data-testid=\"industries-cta-title\">\n            Don't See Your <GradientText>Industry?</GradientText>\n          </h2>\n          <p className=\"text-xl text-nb-muted mb-8 max-w-3xl mx-auto\" data-testid=\"industries-cta-subtitle\">\n            We work with businesses across all sectors. Let's discuss how we can help solve your specific industry challenges.\n          </p>\n          <GlowButton size=\"lg\" className=\"text-lg\" data-testid=\"industries-cta-button\">\n            Schedule a Consultation\n          </GlowButton>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":9285},"client/src/pages/Resources.tsx":{"content":"import { GlowCard } from \"@/components/ui/glow-card\";\nimport { GlowButton } from \"@/components/ui/glow-button\";\nimport { GradientText } from \"@/components/ui/gradient-text\";\n\nexport default function Resources() {\n  const resources = [\n    {\n      category: \"Whitepapers\",\n      items: [\n        {\n          title: \"The Complete Guide to Digital Transformation\",\n          description: \"A comprehensive roadmap for modernizing your IT infrastructure\",\n          type: \"PDF\",\n          downloadUrl: \"#\"\n        },\n        {\n          title: \"Cybersecurity Best Practices for Small Business\",\n          description: \"Essential security measures every business should implement\",\n          type: \"PDF\", \n          downloadUrl: \"#\"\n        },\n        {\n          title: \"Cloud Migration Strategy Framework\",\n          description: \"Step-by-step guide to successful cloud adoption\",\n          type: \"PDF\",\n          downloadUrl: \"#\"\n        }\n      ]\n    },\n    {\n      category: \"Case Studies\",\n      items: [\n        {\n          title: \"Healthcare Provider Reduces Costs by 40%\",\n          description: \"How we helped a regional hospital modernize their IT infrastructure\",\n          type: \"Case Study\",\n          downloadUrl: \"#\"\n        },\n        {\n          title: \"Manufacturing Company Achieves Zero Downtime\",\n          description: \"Implementing predictive maintenance with IoT solutions\",\n          type: \"Case Study\",\n          downloadUrl: \"#\"\n        },\n        {\n          title: \"Financial Firm Enhances Security Posture\",\n          description: \"Complete cybersecurity overhaul for compliance and protection\",\n          type: \"Case Study\",\n          downloadUrl: \"#\"\n        }\n      ]\n    },\n    {\n      category: \"Tools & Calculators\",\n      items: [\n        {\n          title: \"ROI Calculator\",\n          description: \"Calculate the return on investment for your IT projects\",\n          type: \"Tool\",\n          downloadUrl: \"#\"\n        },\n        {\n          title: \"IT Security Assessment\",\n          description: \"Free online assessment to evaluate your security posture\",\n          type: \"Tool\",\n          downloadUrl: \"#\"\n        },\n        {\n          title: \"Cloud Cost Estimator\",\n          description: \"Estimate your potential cloud migration costs and savings\",\n          type: \"Tool\",\n          downloadUrl: \"#\"\n        }\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-nb-bg pt-20\">\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-nb-primary/20 to-nb-accent/20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"font-sora font-bold text-4xl sm:text-5xl lg:text-6xl mb-6\" data-testid=\"resources-hero-title\">\n            Resources & <GradientText>Insights</GradientText>\n          </h1>\n          <p className=\"text-xl text-nb-muted max-w-3xl mx-auto\" data-testid=\"resources-hero-subtitle\">\n            Access our library of expert insights, tools, and resources to help you make informed IT decisions\n          </p>\n        </div>\n      </section>\n\n      {/* Resources Section */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {resources.map((category, categoryIndex) => (\n            <div key={category.category} className=\"mb-16\" data-testid={`resource-category-${categoryIndex}`}>\n              <h2 className=\"font-sora font-bold text-3xl mb-8 text-nb-text\" data-testid={`resource-category-title-${categoryIndex}`}>\n                {category.category}\n              </h2>\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                {category.items.map((resource, resourceIndex) => (\n                  <GlowCard key={resource.title} className=\"p-6 hover:scale-105 transition-all duration-300\" data-testid={`resource-card-${categoryIndex}-${resourceIndex}`}>\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <span className=\"px-3 py-1 bg-nb-primary/20 text-nb-primary rounded-full text-sm font-medium\" data-testid={`resource-type-${categoryIndex}-${resourceIndex}`}>\n                        {resource.type}\n                      </span>\n                      <i className=\"fas fa-download text-nb-accent\"></i>\n                    </div>\n                    \n                    <h3 className=\"font-sora font-bold text-lg mb-3 text-nb-text\" data-testid={`resource-title-${categoryIndex}-${resourceIndex}`}>\n                      {resource.title}\n                    </h3>\n                    \n                    <p className=\"text-nb-muted mb-6 leading-relaxed\" data-testid={`resource-description-${categoryIndex}-${resourceIndex}`}>\n                      {resource.description}\n                    </p>\n\n                    <GlowButton variant=\"secondary\" size=\"sm\" className=\"w-full\" data-testid={`resource-download-${categoryIndex}-${resourceIndex}`}>\n                      <i className=\"fas fa-download mr-2\"></i>\n                      Download\n                    </GlowButton>\n                  </GlowCard>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      </section>\n\n      {/* Newsletter Section */}\n      <section className=\"py-20 bg-gradient-to-r from-nb-primary/20 to-nb-accent/20\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"font-sora font-bold text-3xl sm:text-4xl mb-6\" data-testid=\"newsletter-title\">\n            Stay Updated with <GradientText>Expert Insights</GradientText>\n          </h2>\n          <p className=\"text-xl text-nb-muted mb-8\" data-testid=\"newsletter-subtitle\">\n            Subscribe to our newsletter for the latest IT trends, security updates, and best practices.\n          </p>\n          \n          <div className=\"max-w-md mx-auto\">\n            <div className=\"flex gap-4\" data-testid=\"newsletter-form\">\n              <input\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                className=\"flex-1 px-4 py-3 bg-nb-surface border border-nb-primary/20 rounded-lg text-nb-text placeholder-nb-muted focus:outline-none focus:border-nb-primary\"\n                data-testid=\"newsletter-email-input\"\n              />\n              <GlowButton data-testid=\"newsletter-subscribe-button\">\n                Subscribe\n              </GlowButton>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":6467},"client/src/pages/Services.tsx":{"content":"import { GlowCard } from \"@/components/ui/glow-card\";\nimport { GlowButton } from \"@/components/ui/glow-button\";\nimport { GradientText } from \"@/components/ui/gradient-text\";\n\nexport default function Services() {\n  const services = [\n    {\n      icon: \"fas fa-network-wired\",\n      title: \"IT Strategy & Planning\",\n      description: \"Strategic IT planning and execution to align technology with your business goals\",\n      features: [\n        \"IT Infrastructure Assessment\",\n        \"Technology Roadmapping\",\n        \"Digital Strategy Planning\",\n        \"Budget Planning & Optimization\",\n        \"Vendor Management\",\n        \"Risk Assessment\"\n      ],\n      outcomes: [\n        \"Reduced IT costs by 25-40%\",\n        \"Improved system reliability\",\n        \"Better alignment with business goals\"\n      ]\n    },\n    {\n      icon: \"fas fa-rocket\",\n      title: \"Digital Transformation\",\n      description: \"Transform your business with cutting-edge technology solutions\",\n      features: [\n        \"Cloud Migration Strategy\",\n        \"Process Automation\",\n        \"Digital Workflow Optimization\",\n        \"Legacy System Modernization\",\n        \"Integration Solutions\",\n        \"Change Management\"\n      ],\n      outcomes: [\n        \"40% increase in operational efficiency\",\n        \"Faster time-to-market\",\n        \"Enhanced customer experience\"\n      ]\n    },\n    {\n      icon: \"fas fa-shield-alt\", \n      title: \"Cybersecurity Services\",\n      description: \"Protect your data and systems with enterprise-grade security\",\n      features: [\n        \"Security Audits & Assessments\",\n        \"Threat Detection & Response\",\n        \"Compliance Management\",\n        \"Employee Security Training\",\n        \"Incident Response Planning\",\n        \"Penetration Testing\"\n      ],\n      outcomes: [\n        \"99.9% threat detection rate\",\n        \"Zero security incidents\",\n        \"Full compliance achievement\"\n      ]\n    },\n    {\n      icon: \"fas fa-cloud\",\n      title: \"Cloud Services\", \n      description: \"Leverage the power of cloud computing for scalability and efficiency\",\n      features: [\n        \"Cloud Strategy & Planning\",\n        \"Migration Services\",\n        \"Multi-Cloud Management\",\n        \"Cloud Security\",\n        \"Cost Optimization\",\n        \"DevOps & Automation\"\n      ],\n      outcomes: [\n        \"30-50% cost reduction\",\n        \"Improved scalability\",\n        \"Enhanced disaster recovery\"\n      ]\n    },\n    {\n      icon: \"fas fa-tools\",\n      title: \"Managed IT Services\",\n      description: \"Comprehensive IT support and management for your entire infrastructure\",\n      features: [\n        \"24/7 Monitoring & Support\",\n        \"Help Desk Services\",\n        \"Network Management\",\n        \"Backup & Recovery\",\n        \"Software Management\",\n        \"Hardware Procurement\"\n      ],\n      outcomes: [\n        \"99.9% uptime guarantee\",\n        \"Faster issue resolution\",\n        \"Predictable IT costs\"\n      ]\n    },\n    {\n      icon: \"fas fa-cogs\",\n      title: \"IT Infrastructure\",\n      description: \"Build and maintain robust, scalable IT infrastructure\",\n      features: [\n        \"Network Design & Implementation\",\n        \"Server Management\",\n        \"Storage Solutions\",\n        \"Virtualization\",\n        \"Disaster Recovery\",\n        \"Performance Optimization\"\n      ],\n      outcomes: [\n        \"Improved system performance\",\n        \"Reduced downtime\",\n        \"Better scalability\"\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-nb-bg pt-20\">\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-nb-primary/20 to-nb-accent/20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"font-sora font-bold text-4xl sm:text-5xl lg:text-6xl mb-6\" data-testid=\"services-hero-title\">\n            Our <GradientText>Services</GradientText>\n          </h1>\n          <p className=\"text-xl text-nb-muted max-w-3xl mx-auto\" data-testid=\"services-hero-subtitle\">\n            Comprehensive IT solutions designed to transform your business and drive sustainable growth\n          </p>\n        </div>\n      </section>\n\n      {/* Services Grid */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {services.map((service, index) => (\n              <GlowCard key={service.title} className=\"p-8 hover:scale-105 transition-all duration-300\" data-testid={`service-detail-card-${index}`}>\n                <div className=\"w-16 h-16 bg-gradient-brand rounded-2xl flex items-center justify-center mb-6\">\n                  <i className={`${service.icon} text-2xl text-white`}></i>\n                </div>\n                \n                <h3 className=\"font-sora font-bold text-2xl mb-4 text-nb-text\" data-testid={`service-detail-title-${index}`}>\n                  {service.title}\n                </h3>\n                \n                <p className=\"text-nb-muted mb-6 leading-relaxed\" data-testid={`service-detail-description-${index}`}>\n                  {service.description}\n                </p>\n\n                <div className=\"mb-6\">\n                  <h4 className=\"font-semibold text-nb-text mb-3\">What You Get:</h4>\n                  <ul className=\"space-y-2 text-nb-muted text-sm\">\n                    {service.features.map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center\" data-testid={`service-feature-${index}-${featureIndex}`}>\n                        <i className=\"fas fa-check text-nb-accent mr-2\"></i> {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n\n                <div className=\"mb-6\">\n                  <h4 className=\"font-semibold text-nb-text mb-3\">Typical Outcomes:</h4>\n                  <ul className=\"space-y-2 text-nb-muted text-sm\">\n                    {service.outcomes.map((outcome, outcomeIndex) => (\n                      <li key={outcomeIndex} className=\"flex items-center\" data-testid={`service-outcome-${index}-${outcomeIndex}`}>\n                        <i className=\"fas fa-arrow-up text-green-400 mr-2\"></i> {outcome}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n\n                <GlowButton size=\"sm\" className=\"w-full\" data-testid={`service-detail-cta-${index}`}>\n                  Learn More\n                </GlowButton>\n              </GlowCard>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-gradient-to-r from-nb-primary/20 to-nb-accent/20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"font-sora font-bold text-3xl sm:text-4xl mb-6\" data-testid=\"services-cta-title\">\n            Ready to Transform Your <GradientText>IT Infrastructure?</GradientText>\n          </h2>\n          <p className=\"text-xl text-nb-muted mb-8 max-w-3xl mx-auto\" data-testid=\"services-cta-subtitle\">\n            Let's discuss your specific needs and create a customized solution that drives real results.\n          </p>\n          <GlowButton size=\"lg\" className=\"text-lg\" data-testid=\"services-cta-button\">\n            Get Your Free Consultation\n          </GlowButton>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":7364},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/booking/BookingWidget.tsx":{"content":"import { GlowCard } from \"@/components/ui/glow-card\";\nimport { GlowButton } from \"@/components/ui/glow-button\";\nimport { GradientText } from \"@/components/ui/gradient-text\";\n\ninterface BookingWidgetProps {\n  formCompleted: boolean;\n  formData: any;\n}\n\nexport default function BookingWidget({ formCompleted, formData }: BookingWidgetProps) {\n  if (!formCompleted) {\n    return (\n      <GlowCard className=\"p-8\" data-testid=\"booking-widget-pending\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 bg-gradient-brand rounded-2xl flex items-center justify-center mx-auto mb-6\">\n            <i className=\"fas fa-calendar-alt text-2xl text-white\"></i>\n          </div>\n          <h3 className=\"font-sora font-bold text-2xl mb-4 text-nb-text\">\n            Booking Options\n          </h3>\n          <p className=\"text-nb-muted mb-6\">\n            Complete the intake form to see your personalized booking options and pricing.\n          </p>\n          <div className=\"text-nb-muted text-sm\">\n            <i className=\"fas fa-arrow-left mr-2\"></i>\n            Fill out the form on the left to continue\n          </div>\n        </div>\n      </GlowCard>\n    );\n  }\n\n  // Determine booking recommendation based on form data\n  const getBookingRecommendation = () => {\n    const { companySize, urgency } = formData;\n    \n    // Large companies or urgent needs get paid consultation recommendation\n    if (companySize === 'enterprise' || urgency === 'urgent') {\n      return {\n        type: 'paid',\n        title: 'Priority Consultation',\n        description: 'Based on your requirements, we recommend starting with a comprehensive strategy session.',\n        price: '$299',\n        duration: '90 minutes',\n        includes: [\n          'Comprehensive IT assessment',\n          'Custom strategy roadmap',\n          'Priority support',\n          'Dedicated project manager',\n          'Follow-up action plan'\n        ],\n        buttonText: 'Book Priority Session',\n        note: 'Perfect for complex projects and enterprise needs'\n      };\n    }\n\n    // Smaller companies get free consultation first\n    return {\n      type: 'free',\n      title: 'Free Discovery Call',\n      description: 'Start with a complimentary consultation to discuss your needs and explore solutions.',\n      price: 'Free',\n      duration: '30 minutes',\n      includes: [\n        'Initial needs assessment',\n        'Technology recommendations',\n        'Budget planning guidance',\n        'Next steps roadmap'\n      ],\n      buttonText: 'Schedule Free Call',\n      note: 'Great starting point for most businesses'\n    };\n  };\n\n  const recommendation = getBookingRecommendation();\n\n  return (\n    <GlowCard className=\"p-8\" data-testid=\"booking-widget-active\">\n      <div className=\"text-center mb-6\">\n        <div className=\"w-16 h-16 bg-gradient-brand rounded-2xl flex items-center justify-center mx-auto mb-4\">\n          <i className=\"fas fa-check text-2xl text-white\"></i>\n        </div>\n        <h3 className=\"font-sora font-bold text-2xl mb-2 text-nb-text\">\n          Perfect! Here's Your <GradientText>Next Step</GradientText>\n        </h3>\n        <p className=\"text-nb-muted text-sm\">\n          Based on your responses, we've selected the best option for your needs\n        </p>\n      </div>\n\n      <div className=\"border border-nb-primary/20 rounded-xl p-6 mb-6\" data-testid=\"booking-recommendation\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div>\n            <h4 className=\"font-sora font-bold text-lg text-nb-text\" data-testid=\"booking-title\">\n              {recommendation.title}\n            </h4>\n            <p className=\"text-nb-muted text-sm\" data-testid=\"booking-note\">\n              {recommendation.note}\n            </p>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-2xl font-bold text-nb-primary\" data-testid=\"booking-price\">\n              {recommendation.price}\n            </div>\n            <div className=\"text-nb-muted text-sm\" data-testid=\"booking-duration\">\n              {recommendation.duration}\n            </div>\n          </div>\n        </div>\n\n        <p className=\"text-nb-muted mb-4 leading-relaxed\" data-testid=\"booking-description\">\n          {recommendation.description}\n        </p>\n\n        <div className=\"mb-6\">\n          <h5 className=\"font-semibold text-nb-text mb-3\">What's Included:</h5>\n          <ul className=\"space-y-2\">\n            {recommendation.includes.map((item, index) => (\n              <li key={index} className=\"flex items-center text-nb-muted text-sm\" data-testid={`booking-include-${index}`}>\n                <i className=\"fas fa-check text-nb-accent mr-2\"></i>\n                {item}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <GlowButton size=\"lg\" className=\"w-full text-lg\" data-testid=\"booking-cta-button\">\n          <i className=\"fas fa-calendar-plus mr-2\"></i>\n          {recommendation.buttonText}\n        </GlowButton>\n      </div>\n\n      {/* Alternative Option */}\n      <div className=\"border border-nb-muted/20 rounded-xl p-4 bg-nb-surface/50\" data-testid=\"booking-alternative\">\n        <div className=\"text-center\">\n          <h5 className=\"font-semibold text-nb-text mb-2\">\n            {recommendation.type === 'paid' ? 'Prefer to start smaller?' : 'Need more comprehensive support?'}\n          </h5>\n          <p className=\"text-nb-muted text-sm mb-3\">\n            {recommendation.type === 'paid' \n              ? 'We also offer free 15-minute quick consultations to get started.'\n              : 'For complex projects, consider our comprehensive strategy sessions.'\n            }\n          </p>\n          <GlowButton variant=\"secondary\" size=\"sm\" data-testid=\"booking-alternative-button\">\n            {recommendation.type === 'paid' ? 'Book Free Call Instead' : 'Learn About Premium Options'}\n          </GlowButton>\n        </div>\n      </div>\n\n      <div className=\"mt-6 text-center\">\n        <p className=\"text-nb-muted text-xs\">\n          <i className=\"fas fa-shield-alt mr-1\"></i>\n          100% satisfaction guarantee • No long-term contracts\n        </p>\n      </div>\n    </GlowCard>\n  );\n}","size_bytes":6167},"client/src/components/booking/IntakeForm.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { insertContactInquirySchema } from \"@shared/schema\";\nimport { z } from \"zod\";\n\ninterface IntakeFormProps {\n  onSubmit: (data: any) => void;\n}\n\nexport default function IntakeForm({ onSubmit }: IntakeFormProps) {\n  const { toast } = useToast();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    company: \"\",\n    companySize: \"\",\n    currentItSetup: [] as string[],\n    urgency: \"\",\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleItSetupToggle = (setup: string) => {\n    setFormData(prev => ({\n      ...prev,\n      currentItSetup: prev.currentItSetup.includes(setup)\n        ? prev.currentItSetup.filter(s => s !== setup)\n        : [...prev.currentItSetup, setup]\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      const validatedData = insertContactInquirySchema.parse(formData);\n      onSubmit(validatedData);\n      toast({\n        title: \"Form submitted successfully\",\n        description: \"You can now see the booking options\",\n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        toast({\n          title: \"Validation Error\",\n          description: error.errors[0].message,\n          variant: \"destructive\",\n        });\n      } else {\n        toast({\n          title: \"Error\",\n          description: \"Something went wrong. Please try again.\",\n          variant: \"destructive\",\n        });\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const itSetupOptions = [\"In-house\", \"Outsourced MSP\", \"Mixed\", \"None\"];\n\n  return (\n    <div className=\"bg-nb-card rounded-2xl border border-white/10 p-8 shadow-soft\">\n      <h3 className=\"font-sora font-bold text-2xl mb-6 text-nb-text\" data-testid=\"intake-form-title\">Tell Us About Your Project</h3>\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        <div className=\"grid sm:grid-cols-2 gap-4\">\n          <div>\n            <Label htmlFor=\"name\" className=\"text-nb-text\">Name *</Label>\n            <Input\n              id=\"name\"\n              type=\"text\"\n              placeholder=\"Your full name\"\n              value={formData.name}\n              onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n              className=\"mt-2 border-white/20 focus:ring-nb-accent focus:border-nb-accent bg-nb-bg text-nb-text placeholder:text-nb-muted\"\n              required\n              data-testid=\"input-name\"\n            />\n          </div>\n          <div>\n            <Label htmlFor=\"email\" className=\"text-nb-text\">Email *</Label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"your@email.com\"\n              value={formData.email}\n              onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}\n              className=\"mt-2 border-white/20 focus:ring-nb-accent focus:border-nb-accent bg-nb-bg text-nb-text placeholder:text-nb-muted\"\n              required\n              data-testid=\"input-email\"\n            />\n          </div>\n        </div>\n\n        <div>\n          <Label htmlFor=\"company\" className=\"text-nb-text\">Company Name *</Label>\n          <Input\n            id=\"company\"\n            type=\"text\"\n            placeholder=\"Your company\"\n            value={formData.company}\n            onChange={(e) => setFormData(prev => ({ ...prev, company: e.target.value }))}\n            className=\"mt-2 border-white/20 focus:ring-nb-accent focus:border-nb-accent bg-nb-bg text-nb-text placeholder:text-nb-muted\"\n            required\n            data-testid=\"input-company\"\n          />\n        </div>\n\n        <div>\n          <Label className=\"text-nb-text\">Company Size</Label>\n          <Select value={formData.companySize} onValueChange={(value) => setFormData(prev => ({ ...prev, companySize: value }))}>\n            <SelectTrigger className=\"mt-2 border-white/20 focus:ring-nb-accent bg-nb-bg text-nb-text\" data-testid=\"select-company-size\">\n              <SelectValue placeholder=\"Select company size\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"1-10\">1-10 employees</SelectItem>\n              <SelectItem value=\"11-50\">11-50 employees</SelectItem>\n              <SelectItem value=\"51-200\">51-200 employees</SelectItem>\n              <SelectItem value=\"200+\">200+ employees</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div>\n          <Label className=\"text-nb-text\">Current IT Setup</Label>\n          <div className=\"flex flex-wrap gap-2 mt-2 bg-nb-bg p-3 rounded-lg border border-white/20\">\n            {itSetupOptions.map((setup) => (\n              <button\n                key={setup}\n                type=\"button\"\n                onClick={() => handleItSetupToggle(setup)}\n                className={`px-3 py-2 rounded-lg text-sm transition-colors ${\n                  formData.currentItSetup.includes(setup)\n                    ? 'bg-gradient-to-r from-nb-accent to-nb-primary text-white'\n                    : 'bg-nb-card border border-white/10 text-nb-text hover:bg-gradient-to-r hover:from-nb-accent hover:to-nb-primary hover:text-white'\n                }`}\n                data-testid={`chip-it-setup-${setup.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                {setup}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <div>\n          <Label className=\"text-nb-text\">Urgency</Label>\n          <Select value={formData.urgency} onValueChange={(value) => setFormData(prev => ({ ...prev, urgency: value }))}>\n            <SelectTrigger className=\"mt-2 border-white/20 focus:ring-nb-accent bg-nb-bg text-nb-text\" data-testid=\"select-urgency\">\n              <SelectValue placeholder=\"How soon do you need help?\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"immediate\">Immediate (ASAP)</SelectItem>\n              <SelectItem value=\"this-month\">This Month</SelectItem>\n              <SelectItem value=\"3-months\">3+ Months</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n\n        <Button \n          type=\"submit\" \n          disabled={isSubmitting}\n          className=\"w-full glow-button\"\n          data-testid=\"button-submit-intake\"\n        >\n          {isSubmitting ? \"Submitting...\" : \"Continue to Booking\"}\n        </Button>\n      </form>\n    </div>\n  );\n}\n","size_bytes":6761},"client/src/components/layout/Footer.tsx":{"content":"import { Link } from \"wouter\";\nimport logoPath from \"@assets/Nifty Byte Inverted Color_1754788468624.png\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-nb-card border-t border-white/10\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <div className=\"grid md:grid-cols-4 gap-8\">\n          {/* Company Info */}\n          <div className=\"col-span-1\">\n            <div className=\"flex items-center mb-6\">\n              <img \n                src={logoPath} \n                alt=\"NiftyByte Technologies\" \n                className=\"h-8 w-auto\"\n              />\n            </div>\n            <p className=\"text-nb-muted mb-4 leading-relaxed\">\n              Expert IT consulting services helping businesses transform and grow through technology since 2009.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a href=\"#\" className=\"text-nb-muted hover:text-nb-accent transition-colors\" data-testid=\"footer-linkedin\">\n                <i className=\"fab fa-linkedin text-xl\"></i>\n              </a>\n              <a href=\"#\" className=\"text-nb-muted hover:text-nb-accent transition-colors\" data-testid=\"footer-twitter\">\n                <i className=\"fab fa-twitter text-xl\"></i>\n              </a>\n              <a href=\"#\" className=\"text-nb-muted hover:text-nb-accent transition-colors\" data-testid=\"footer-github\">\n                <i className=\"fab fa-github text-xl\"></i>\n              </a>\n            </div>\n          </div>\n\n          {/* Services */}\n          <div>\n            <h3 className=\"font-sora font-semibold text-lg mb-4 text-nb-text\">Services</h3>\n            <ul className=\"space-y-2 text-nb-muted\">\n              <li><Link href=\"/services/strategy\" className=\"hover:text-nb-accent transition-colors\" data-testid=\"footer-service-strategy\">IT Strategy</Link></li>\n              <li><Link href=\"/services/digital-transformation\" className=\"hover:text-nb-accent transition-colors\" data-testid=\"footer-service-digital\">Digital Transformation</Link></li>\n              <li><Link href=\"/services/cybersecurity\" className=\"hover:text-nb-accent transition-colors\" data-testid=\"footer-service-cyber\">Cybersecurity</Link></li>\n              <li><Link href=\"/services/cloud\" className=\"hover:text-nb-accent transition-colors\" data-testid=\"footer-service-cloud\">Cloud Services</Link></li>\n              <li><Link href=\"/services/managed-it\" className=\"hover:text-nb-accent transition-colors\" data-testid=\"footer-service-managed\">Managed IT</Link></li>\n            </ul>\n          </div>\n\n          {/* Industries */}\n          <div>\n            <h3 className=\"font-sora font-semibold text-lg mb-4 text-nb-text\">Industries</h3>\n            <ul className=\"space-y-2 text-nb-muted\">\n              <li><Link href=\"/industries/healthcare\" className=\"hover:text-nb-accent transition-colors\" data-testid=\"footer-industry-healthcare\">Healthcare</Link></li>\n              <li><Link href=\"/industries/financial\" className=\"hover:text-nb-accent transition-colors\" data-testid=\"footer-industry-financial\">Financial</Link></li>\n              <li><Link href=\"/industries/education\" className=\"hover:text-nb-accent transition-colors\" data-testid=\"footer-industry-education\">Education</Link></li>\n              <li><Link href=\"/industries/manufacturing\" className=\"hover:text-nb-accent transition-colors\" data-testid=\"footer-industry-manufacturing\">Manufacturing</Link></li>\n              <li><Link href=\"/industries/retail\" className=\"hover:text-nb-accent transition-colors\" data-testid=\"footer-industry-retail\">Retail</Link></li>\n            </ul>\n          </div>\n\n          {/* Company */}\n          <div>\n            <h3 className=\"font-sora font-semibold text-lg mb-4 text-nb-text\">Company</h3>\n            <ul className=\"space-y-2 text-nb-muted\">\n              <li><Link href=\"/about\" className=\"hover:text-nb-accent transition-colors\" data-testid=\"footer-about\">About Us</Link></li>\n              <li><Link href=\"/resources\" className=\"hover:text-nb-accent transition-colors\" data-testid=\"footer-resources\">Resources</Link></li>\n              <li><Link href=\"/blog\" className=\"hover:text-nb-accent transition-colors\" data-testid=\"footer-blog\">Blog</Link></li>\n              <li><Link href=\"/contact\" className=\"hover:text-nb-accent transition-colors\" data-testid=\"footer-contact\">Contact</Link></li>\n              <li><a href=\"/careers\" className=\"hover:text-nb-accent transition-colors\" data-testid=\"footer-careers\">Careers</a></li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"border-t border-white/10 mt-12 pt-8 flex flex-col md:flex-row justify-between items-center\">\n          <p className=\"text-nb-muted text-sm\">\n            © 2024 NiftyByte Technologies. All rights reserved.\n          </p>\n          <div className=\"flex space-x-6 mt-4 md:mt-0\">\n            <a href=\"/privacy\" className=\"text-nb-muted hover:text-nb-accent text-sm transition-colors\" data-testid=\"footer-privacy\">Privacy Policy</a>\n            <a href=\"/terms\" className=\"text-nb-muted hover:text-nb-accent text-sm transition-colors\" data-testid=\"footer-terms\">Terms of Service</a>\n            <a href=\"/security\" className=\"text-nb-muted hover:text-nb-accent text-sm transition-colors\" data-testid=\"footer-security\">Security</a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":5374},"client/src/components/layout/NavBar.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { \n  Menu, \n  ChevronDown, \n  Brain, \n  Rocket, \n  Shield, \n  Cloud, \n  Settings, \n  BarChart3 \n} from \"lucide-react\";\nimport logoIconPath from \"@assets/1754808044144_1754808063522.png\";\n\nexport default function NavBar() {\n  const [location] = useLocation();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const renderIcon = (IconComponent: any) => {\n    return <IconComponent size={24} />;\n  };\n\n  const services = [\n    { \n      name: \"AI-Powered IT Strategy\", \n      href: \"/services/strategy\",\n      description: \"Strategic IT planning with AI insights to optimize your technology roadmap and business outcomes.\",\n      icon: Brain\n    },\n    { \n      name: \"Digital Transformation\", \n      href: \"/services/digital-transformation\",\n      description: \"End-to-end digital transformation leveraging AI to modernize your business processes.\",\n      icon: Rocket\n    },\n    { \n      name: \"Cybersecurity & Compliance\", \n      href: \"/services/cybersecurity\",\n      description: \"AI-enhanced security solutions to protect your business from evolving cyber threats.\",\n      icon: Shield\n    },\n    { \n      name: \"Cloud Migration & Optimization\", \n      href: \"/services/cloud\",\n      description: \"Smart cloud solutions with AI-driven cost optimization and performance monitoring.\",\n      icon: Cloud\n    },\n    { \n      name: \"Managed IT Services\", \n      href: \"/services/managed-it\",\n      description: \"24/7 proactive IT support powered by AI monitoring and predictive maintenance.\",\n      icon: Settings\n    },\n    { \n      name: \"Data Analytics & AI\", \n      href: \"/services/data-analytics\",\n      description: \"Transform your data into actionable insights with advanced AI and machine learning.\",\n      icon: BarChart3\n    },\n  ];\n\n  const industries = [\n    { name: \"Healthcare\", href: \"/industries/healthcare\" },\n    { name: \"Financial\", href: \"/industries/financial\" },\n    { name: \"Education\", href: \"/industries/education\" },\n    { name: \"Manufacturing\", href: \"/industries/manufacturing\" },\n    { name: \"Retail\", href: \"/industries/retail\" },\n  ];\n\n  return (\n    <nav className=\"fixed top-0 left-0 right-0 z-50 bg-nb-bg/80 backdrop-blur-md border-b border-white/10\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-20\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center space-x-3\" data-testid=\"nav-logo\">\n            <img \n              src={logoIconPath} \n              alt=\"NiftyByte Technologies\" \n              className=\"h-16 w-16\"\n            />\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            <Link \n              href=\"/\" \n              className={`transition-colors ${location === '/' ? 'text-nb-accent' : 'text-nb-text hover:text-nb-accent'}`}\n              data-testid=\"nav-home\"\n            >\n              Home\n            </Link>\n            \n            <div className=\"relative group\">\n              <button className=\"text-nb-text hover:text-nb-accent transition-colors flex items-center\" data-testid=\"nav-services\">\n                Services <ChevronDown className=\"ml-1 h-3 w-3 group-hover:rotate-180 transition-transform duration-200\" />\n              </button>\n              <div className=\"absolute top-full left-0 pt-2 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50\">\n                <div className=\"bg-nb-card border border-nb-primary/20 w-[800px] p-6 rounded shadow-floating\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    {services.map((service) => (\n                      <Link \n                        key={service.href} \n                        href={service.href} \n                        className=\"group/item block p-4 rounded border border-white/5 hover:border-white/10 hover:bg-nb-primary/3 hover:shadow-soft transition-all duration-200\" \n                        data-testid={`nav-service-${service.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                      >\n                        <div className=\"flex items-start space-x-3\">\n                          <div className=\"mt-1 text-nb-accent group-hover/item:text-pink-300 group-hover/item:scale-110 transition-all duration-200 [&>svg]:drop-shadow-[0_0_6px_rgba(255,79,216,0.4)]\">\n                            {renderIcon(service.icon)}\n                          </div>\n                          <div className=\"flex-1\">\n                            <h3 className=\"font-semibold text-nb-text group-hover/item:text-nb-accent transition-colors mb-1\">\n                              {service.name}\n                            </h3>\n                            <p className=\"text-sm text-nb-muted group-hover/item:text-nb-text transition-colors leading-relaxed\">\n                              {service.description}\n                            </p>\n                          </div>\n                        </div>\n                      </Link>\n                    ))}\n                  </div>\n                  <div className=\"mt-6 pt-4 border-t border-white/10\">\n                    <Link \n                      href=\"/services\" \n                      className=\"inline-flex items-center text-nb-accent hover:text-nb-primary transition-colors font-medium\"\n                    >\n                      View All Services →\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"relative group\">\n              <button className=\"text-nb-text hover:text-nb-accent transition-colors flex items-center\" data-testid=\"nav-industries\">\n                Industries <ChevronDown className=\"ml-1 h-3 w-3 group-hover:rotate-180 transition-transform duration-200\" />\n              </button>\n              <div className=\"absolute top-full left-0 pt-2 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50\">\n                <div className=\"bg-nb-card border border-nb-primary/20 rounded shadow-soft min-w-[200px] py-2\">\n                  {industries.map((industry) => (\n                    <Link \n                      key={industry.href} \n                      href={industry.href} \n                      className=\"block px-4 py-2 text-nb-text hover:text-nb-accent hover:bg-nb-primary/5 transition-colors\" \n                      data-testid={`nav-industry-${industry.name.toLowerCase()}`}\n                    >\n                      {industry.name}\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            <Link \n              href=\"/about\" \n              className={`transition-colors ${location === '/about' ? 'text-nb-accent' : 'text-nb-text hover:text-nb-accent'}`}\n              data-testid=\"nav-about\"\n            >\n              About\n            </Link>\n            <Link \n              href=\"/resources\" \n              className={`transition-colors ${location === '/resources' ? 'text-nb-accent' : 'text-nb-text hover:text-nb-accent'}`}\n              data-testid=\"nav-resources\"\n            >\n              Resources\n            </Link>\n            <Link \n              href=\"/blog\" \n              className={`transition-colors ${location === '/blog' ? 'text-nb-accent' : 'text-nb-text hover:text-nb-accent'}`}\n              data-testid=\"nav-blog\"\n            >\n              Blog\n            </Link>\n            <Link href=\"/contact\" data-testid=\"nav-contact\">\n              <Button className=\"glow-button px-6 py-2 text-sm\">\n                Contact\n              </Button>\n            </Link>\n          </div>\n\n          {/* Mobile menu button */}\n          <Sheet open={isOpen} onOpenChange={setIsOpen}>\n            <SheetTrigger asChild>\n              <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden text-nb-text\" data-testid=\"nav-mobile-menu\">\n                <Menu className=\"h-6 w-6\" />\n              </Button>\n            </SheetTrigger>\n            <SheetContent side=\"right\" className=\"bg-nb-card border-nb-primary/20\">\n              <div className=\"flex flex-col space-y-4 mt-6\">\n                <Link href=\"/\" className=\"text-nb-text hover:text-nb-accent transition-colors\" onClick={() => setIsOpen(false)}>\n                  Home\n                </Link>\n                <div className=\"space-y-2\">\n                  <span className=\"text-nb-muted text-sm font-medium\">Services</span>\n                  {services.map((service) => (\n                    <Link \n                      key={service.href}\n                      href={service.href} \n                      className=\"block pl-4 text-nb-text hover:text-nb-accent transition-colors\" \n                      onClick={() => setIsOpen(false)}\n                    >\n                      {service.name}\n                    </Link>\n                  ))}\n                </div>\n                <div className=\"space-y-2\">\n                  <span className=\"text-nb-muted text-sm font-medium\">Industries</span>\n                  {industries.map((industry) => (\n                    <Link \n                      key={industry.href}\n                      href={industry.href} \n                      className=\"block pl-4 text-nb-text hover:text-nb-accent transition-colors\" \n                      onClick={() => setIsOpen(false)}\n                    >\n                      {industry.name}\n                    </Link>\n                  ))}\n                </div>\n                <Link href=\"/about\" className=\"text-nb-text hover:text-nb-accent transition-colors\" onClick={() => setIsOpen(false)}>\n                  About\n                </Link>\n                <Link href=\"/resources\" className=\"text-nb-text hover:text-nb-accent transition-colors\" onClick={() => setIsOpen(false)}>\n                  Resources\n                </Link>\n                <Link href=\"/blog\" className=\"text-nb-text hover:text-nb-accent transition-colors\" onClick={() => setIsOpen(false)}>\n                  Blog\n                </Link>\n                <Link href=\"/contact\" onClick={() => setIsOpen(false)}>\n                  <Button className=\"glow-button w-full\">\n                    Contact\n                  </Button>\n                </Link>\n              </div>\n            </SheetContent>\n          </Sheet>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","size_bytes":10582},"client/src/components/sections/ContactPreview.tsx":{"content":"import IntakeForm from \"@/components/booking/IntakeForm\";\nimport BookingWidget from \"@/components/booking/BookingWidget\";\nimport { GradientText } from \"@/components/ui/gradient-text\";\nimport { useState } from \"react\";\n\nexport default function ContactPreview() {\n  const [formCompleted, setFormCompleted] = useState(false);\n  const [formData, setFormData] = useState(null);\n\n  const handleFormSubmit = (data: any) => {\n    setFormData(data);\n    setFormCompleted(true);\n  };\n\n  return (\n    <section className=\"py-20 bg-nb-bg\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"font-sora font-bold text-3xl sm:text-4xl lg:text-5xl mb-6 text-nb-text\" data-testid=\"contact-preview-title\">\n            Ready to Get <GradientText>Started?</GradientText>\n          </h2>\n          <p className=\"text-xl text-nb-muted max-w-3xl mx-auto\" data-testid=\"contact-preview-subtitle\">\n            Schedule a consultation to discuss your IT challenges and discover how we can help\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-2 gap-12 items-start\">\n          <IntakeForm onSubmit={handleFormSubmit} />\n          <BookingWidget formCompleted={formCompleted} formData={formData} />\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1324},"client/src/components/sections/FinalCTA.tsx":{"content":"import { GlowButton } from \"@/components/ui/glow-button\";\nimport { GradientText } from \"@/components/ui/gradient-text\";\n\nexport default function FinalCTA() {\n  return (\n    <section className=\"py-20 bg-nb-bg bg-noise relative overflow-hidden\">\n      <div className=\"absolute inset-0 bg-gradient-to-r from-nb-primary/20 to-nb-accent/20\"></div>\n      <div className=\"relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n        <h2 className=\"font-sora font-bold text-3xl sm:text-4xl lg:text-5xl mb-6\" data-testid=\"final-cta-title\">\n          Transform Your Business with\n          <span className=\"block\">\n            <GradientText>Expert IT Consulting</GradientText>\n          </span>\n        </h2>\n        <p className=\"text-xl text-nb-muted mb-8 max-w-3xl mx-auto\" data-testid=\"final-cta-subtitle\">\n          Join hundreds of satisfied clients who have transformed their operations with our proven methodology and expert guidance.\n        </p>\n        <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n          <GlowButton size=\"lg\" className=\"text-lg\" data-testid=\"button-start-transformation\">\n            Start Your Transformation\n          </GlowButton>\n          <GlowButton variant=\"secondary\" size=\"lg\" className=\"text-lg\" data-testid=\"button-view-case-studies\">\n            View Case Studies\n          </GlowButton>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1406},"client/src/components/sections/Hero.tsx":{"content":"import { GlowButton } from \"@/components/ui/glow-button\";\nimport { GradientText } from \"@/components/ui/gradient-text\";\nimport { Link } from \"wouter\";\nimport modifiedBillboardPath from \"@assets/ChatGPT Image Aug 10, 2025, 01_28_25 AM_1754807316422.png\";\nimport niftyByteLogo from \"@assets/Nifty Byte Inverted Color (1)_1754807538978.png\";\n\nexport default function Hero() {\n  return (\n    <section className=\"relative bg-nb-bg bg-noise overflow-hidden pt-48 pb-24\">\n      {/* Background Billboard Image */}\n      <div className=\"absolute inset-0 z-0\">\n        <img \n          src={modifiedBillboardPath} \n          alt=\"NiftyByte Technologies Billboard Background\" \n          className=\"w-full h-full object-cover opacity-60\"\n        />\n      </div>\n      \n      {/* Background Gradient */}\n      <div className=\"absolute inset-0 z-5 bg-gradient-to-br from-nb-primary/20 via-nb-bg/40 to-nb-accent/20\"></div>\n\n      <div className=\"relative z-20 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Subtle radial gradient background behind the unified card */}\n        <div className=\"absolute inset-0 bg-gradient-to-br from-fuchsia-500/10 via-violet-500/5 to-transparent blur-3xl -z-10\"></div>\n        \n        {/* Unified Glass Container for Both Sides */}\n        <div className=\"rounded-2xl border border-white/10 bg-white/10 backdrop-blur-xl shadow-2xl shadow-black/20 px-12 md:px-16 lg:px-24 py-12 md:py-16 lg:py-20 mx-2 lg:mx-0 transform hover:translate-y-[-2px] hover:shadow-3xl hover:shadow-black/30 transition-all duration-300\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            {/* Left Side - CTA Content */}\n            <div className=\"lg:text-left text-center\">\n              <h1 className=\"font-source-sans font-bold text-4xl sm:text-5xl lg:text-6xl leading-tight mb-6 text-gray-100\" data-testid=\"hero-title\">\n                Your IT, \n                <span className=\"block mt-2\">\n                  <span className=\"bg-gradient-to-r from-fuchsia-500 to-violet-500 bg-clip-text text-transparent\">Powered by AI</span>\n                </span>\n              </h1>\n              <p className=\"text-lg sm:text-xl text-white/90 mb-8 leading-relaxed\" data-testid=\"hero-subtitle\">\n                Stop relying on outdated tech support. We combine 15+ years of IT expertise with cutting-edge AI to keep you secure, compliant, and ahead of the curve.\n              </p>\n              <div className=\"flex lg:justify-start justify-center\">\n                <Link href=\"/contact\">\n                  <button className=\"bg-gradient-to-r from-fuchsia-500 to-violet-500 hover:from-fuchsia-400 hover:to-violet-400 text-white font-bold text-xl px-10 py-5 rounded-xl shadow-2xl shadow-fuchsia-500/30 hover:shadow-3xl hover:shadow-fuchsia-500/50 hover:glow transition-all duration-300 transform hover:scale-110 ring-2 ring-white/10 hover:ring-white/20\" data-testid=\"button-book-consultation\">\n                    Book Free Consultation\n                  </button>\n                </Link>\n              </div>\n            </div>\n\n            {/* Right Side - Logo */}\n            <div className=\"lg:flex hidden justify-center items-center\">\n              <div className=\"relative\">\n                <img \n                  src={niftyByteLogo} \n                  alt=\"NiftyByte Technologies Logo\" \n                  className=\"w-80 h-auto opacity-90 drop-shadow-2xl transform hover:scale-105 transition-all duration-500\"\n                />\n                {/* Logo Glow Effect */}\n                <div className=\"absolute inset-0 bg-gradient-to-r from-nb-primary/20 to-nb-accent/20 blur-3xl -z-10 rounded-full\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Trust Indicators */}\n        <div className=\"mt-20 pt-12 border-t border-white/10\">\n          <p className=\"text-center text-nb-muted mb-8\" data-testid=\"trust-indicator-text\">Trusted by leading companies since 2009</p>\n          <div className=\"flex flex-wrap justify-center items-center gap-8 opacity-60\">\n            <div className=\"flex items-center space-x-2 text-nb-muted\" data-testid=\"trust-indicator-soc\">\n              <i className=\"fas fa-shield-alt text-2xl\"></i>\n              <span className=\"font-semibold\">SOC 2 Compliant</span>\n            </div>\n            <div className=\"flex items-center space-x-2 text-nb-muted\" data-testid=\"trust-indicator-iso\">\n              <i className=\"fas fa-award text-2xl\"></i>\n              <span className=\"font-semibold\">ISO 27001</span>\n            </div>\n            <div className=\"flex items-center space-x-2 text-nb-muted\" data-testid=\"trust-indicator-clients\">\n              <i className=\"fas fa-users text-2xl\"></i>\n              <span className=\"font-semibold\">500+ Clients</span>\n            </div>\n            <div className=\"flex items-center space-x-2 text-nb-muted\" data-testid=\"trust-indicator-support\">\n              <i className=\"fas fa-clock text-2xl\"></i>\n              <span className=\"font-semibold\">24/7 Support</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5097},"client/src/components/sections/IndustriesPreview.tsx":{"content":"import { GlowCard } from \"@/components/ui/glow-card\";\nimport { GlowButton } from \"@/components/ui/glow-button\";\nimport { GradientText } from \"@/components/ui/gradient-text\";\n\nexport default function IndustriesPreview() {\n  const industries = [\n    {\n      icon: \"fas fa-heartbeat\",\n      title: \"Healthcare\",\n      description: \"HIPAA-compliant solutions\"\n    },\n    {\n      icon: \"fas fa-university\", \n      title: \"Financial\",\n      description: \"Secure financial systems\"\n    },\n    {\n      icon: \"fas fa-graduation-cap\",\n      title: \"Education\", \n      description: \"Modern learning platforms\"\n    },\n    {\n      icon: \"fas fa-industry\",\n      title: \"Manufacturing\",\n      description: \"Smart factory solutions\"\n    }\n  ];\n\n  return (\n    <section className=\"py-20 bg-gradient-to-br from-nb-card to-nb-bg\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"font-sora font-bold text-3xl sm:text-4xl lg:text-5xl mb-6\" data-testid=\"industries-title\">\n            Industries We <GradientText>Serve</GradientText>\n          </h2>\n          <p className=\"text-xl text-nb-muted max-w-3xl mx-auto\" data-testid=\"industries-subtitle\">\n            Specialized solutions tailored to your industry's unique challenges\n          </p>\n        </div>\n\n        <div className=\"grid sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {industries.map((industry, index) => (\n            <GlowCard key={industry.title} className=\"p-6 text-center hover:scale-105 transition-all\" data-testid={`industry-card-${index}`}>\n              <i className={`${industry.icon} text-3xl text-nb-accent mb-4`}></i>\n              <h3 className=\"font-sora font-semibold text-lg mb-2\" data-testid={`industry-title-${index}`}>{industry.title}</h3>\n              <p className=\"text-nb-muted text-sm\" data-testid={`industry-description-${index}`}>{industry.description}</p>\n            </GlowCard>\n          ))}\n        </div>\n\n        <div className=\"text-center mt-12\">\n          <GlowButton variant=\"secondary\" data-testid=\"button-view-industries\">\n            Explore All Industries\n          </GlowButton>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2204},"client/src/components/sections/ProcessSection.tsx":{"content":"import { GradientText } from \"@/components/ui/gradient-text\";\n\nexport default function ProcessSection() {\n  const steps = [\n    {\n      number: \"1\",\n      title: \"ASSESS\",\n      description: \"We thoroughly analyze your current IT infrastructure, identify pain points, and understand your business objectives.\"\n    },\n    {\n      number: \"2\", \n      title: \"STABILIZE\",\n      description: \"We implement immediate fixes and establish a stable foundation for future growth and optimization.\"\n    },\n    {\n      number: \"3\",\n      title: \"OPTIMIZE\", \n      description: \"We continuously improve and optimize your systems for peak performance and long-term success.\"\n    }\n  ];\n\n  return (\n    <section className=\"py-20 bg-nb-bg\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"font-sora font-bold text-3xl sm:text-4xl lg:text-5xl mb-6\" data-testid=\"process-title\">\n            How We <GradientText>Work</GradientText>\n          </h2>\n          <p className=\"text-xl text-nb-muted max-w-3xl mx-auto\" data-testid=\"process-subtitle\">\n            Our proven methodology ensures successful project delivery every time\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-3 gap-8\">\n          {steps.map((step, index) => (\n            <div key={step.number} className=\"text-center relative\" data-testid={`process-step-${index}`}>\n              <div className=\"w-20 h-20 bg-gradient-brand rounded-full flex items-center justify-center mx-auto mb-6 animate-glow-pulse\" style={{animationDelay: `${index * 0.5}s`}}>\n                <span className=\"text-2xl font-bold text-white\">{step.number}</span>\n              </div>\n              <h3 className=\"font-sora font-bold text-xl mb-4\" data-testid={`process-step-title-${index}`}>{step.title}</h3>\n              <p className=\"text-nb-muted leading-relaxed\" data-testid={`process-step-description-${index}`}>\n                {step.description}\n              </p>\n              {/* Connection line for desktop */}\n              {index < steps.length - 1 && (\n                <div className=\"hidden md:block absolute top-10 left-1/2 w-full h-0.5 bg-gradient-to-r from-nb-primary to-nb-accent transform translate-x-10 z-0\"></div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2365},"client/src/components/sections/ServicesPreview.tsx":{"content":"import { GlowCard } from \"@/components/ui/glow-card\";\nimport { GlowButton } from \"@/components/ui/glow-button\";\nimport { GradientText } from \"@/components/ui/gradient-text\";\n\nexport default function ServicesPreview() {\n  const services = [\n    {\n      icon: \"fas fa-network-wired\",\n      title: \"STRATEGY\",\n      description: \"Strategic IT planning and execution to align technology with your business goals\",\n      features: [\n        \"IT Infrastructure Assessment\",\n        \"Technology Roadmapping\", \n        \"Digital Strategy Planning\"\n      ]\n    },\n    {\n      icon: \"fas fa-rocket\",\n      title: \"DIGITAL TRANSFORMATION\",\n      description: \"Transform your business with cutting-edge technology solutions\",\n      features: [\n        \"Cloud Migration\",\n        \"Process Automation\",\n        \"Digital Workflow Optimization\"\n      ]\n    },\n    {\n      icon: \"fas fa-shield-alt\",\n      title: \"CYBERSECURITY\", \n      description: \"Protect your data and systems with enterprise-grade security\",\n      features: [\n        \"Security Audits\",\n        \"Threat Detection\",\n        \"Compliance Management\"\n      ]\n    }\n  ];\n\n  return (\n    <section className=\"py-20 bg-nb-bg relative\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-10\">\n          <h2 className=\"font-sora font-bold text-3xl sm:text-4xl lg:text-5xl mb-6\" data-testid=\"services-title\">\n            Our Core <GradientText>Services</GradientText>\n          </h2>\n          <p className=\"text-xl text-nb-muted max-w-3xl mx-auto\" data-testid=\"services-subtitle\">\n            Comprehensive IT solutions designed to drive your business forward\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-3 gap-8\">\n          {services.map((service, index) => (\n            <GlowCard key={service.title} className=\"p-8 text-center hover:scale-105 transition-all duration-300\" data-testid={`service-card-${index}`}>\n              <div className=\"w-16 h-16 bg-gradient-brand rounded-2xl flex items-center justify-center mx-auto mb-6 animate-glow-pulse\" style={{animationDelay: `${index * 0.5}s`}}>\n                <i className={`${service.icon} text-2xl text-white`}></i>\n              </div>\n              <h3 className=\"font-sora font-bold text-2xl mb-4 text-nb-text\" data-testid={`service-title-${index}`}>{service.title}</h3>\n              <p className=\"text-nb-muted mb-6 leading-relaxed\" data-testid={`service-description-${index}`}>\n                {service.description}\n              </p>\n              <ul className=\"text-left space-y-2 text-nb-muted text-sm mb-6\">\n                {service.features.map((feature, featureIndex) => (\n                  <li key={featureIndex} className=\"flex items-center\" data-testid={`service-feature-${index}-${featureIndex}`}>\n                    <i className=\"fas fa-check text-nb-accent mr-2\"></i> {feature}\n                  </li>\n                ))}\n              </ul>\n              <button className=\"text-nb-accent hover:text-nb-primary font-semibold flex items-center mx-auto\" data-testid={`service-learn-more-${index}`}>\n                Learn More <i className=\"fas fa-arrow-right ml-2\"></i>\n              </button>\n            </GlowCard>\n          ))}\n        </div>\n\n        <div className=\"text-center mt-12\">\n          <GlowButton data-testid=\"button-view-all-services\">\n            View All Services\n          </GlowButton>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3453},"client/src/components/sections/TestimonialsSection.tsx":{"content":"import { GlowCard } from \"@/components/ui/glow-card\";\nimport { GradientText } from \"@/components/ui/gradient-text\";\n\nexport default function TestimonialsSection() {\n  const testimonials = [\n    {\n      name: \"Sarah Mitchell\",\n      title: \"CTO, HealthTech Solutions\", \n      initials: \"SM\",\n      content: \"NiftyByte transformed our entire IT infrastructure. Their expertise in healthcare compliance saved us months of work.\",\n      rating: 5\n    },\n    {\n      name: \"James Chen\",\n      title: \"CEO, FinanceFlow\",\n      initials: \"JC\", \n      content: \"The cybersecurity improvements they implemented gave us peace of mind and improved our compliance rating significantly.\",\n      rating: 5\n    },\n    {\n      name: \"Amanda Rodriguez\",\n      title: \"Director, EduTech Academy\",\n      initials: \"AR\",\n      content: \"Their cloud migration strategy reduced our costs by 40% while improving performance across all our educational platforms.\",\n      rating: 5\n    }\n  ];\n\n  return (\n    <section className=\"py-20 bg-gradient-to-br from-nb-card to-nb-bg\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"font-sora font-bold text-3xl sm:text-4xl lg:text-5xl mb-6\" data-testid=\"testimonials-title\">\n            Client <GradientText>Success Stories</GradientText>\n          </h2>\n          <p className=\"text-xl text-nb-muted\" data-testid=\"testimonials-subtitle\">\n            See what our clients say about working with NiftyByte Technologies\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {testimonials.map((testimonial, index) => (\n            <GlowCard key={testimonial.name} className=\"p-8\" data-testid={`testimonial-card-${index}`}>\n              <div className=\"flex items-center mb-4\">\n                <div className=\"w-12 h-12 bg-gradient-brand rounded-full flex items-center justify-center mr-4\">\n                  <span className=\"font-bold text-white\">{testimonial.initials}</span>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-nb-text\" data-testid={`testimonial-name-${index}`}>{testimonial.name}</h4>\n                  <p className=\"text-nb-muted text-sm\" data-testid={`testimonial-title-${index}`}>{testimonial.title}</p>\n                </div>\n              </div>\n              <div className=\"flex text-nb-accent mb-4\" data-testid={`testimonial-rating-${index}`}>\n                {[...Array(testimonial.rating)].map((_, i) => (\n                  <i key={i} className=\"fas fa-star\"></i>\n                ))}\n              </div>\n              <p className=\"text-nb-muted leading-relaxed\" data-testid={`testimonial-content-${index}`}>\n                \"{testimonial.content}\"\n              </p>\n            </GlowCard>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2885},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/glow-button.tsx":{"content":"import { forwardRef } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Button, ButtonProps } from \"@/components/ui/button\";\n\ninterface GlowButtonProps extends Omit<ButtonProps, 'variant'> {\n  variant?: \"primary\" | \"secondary\";\n}\n\nconst GlowButton = forwardRef<HTMLButtonElement, GlowButtonProps>(\n  ({ className, variant = \"primary\", children, ...props }, ref) => {\n    return (\n      <Button\n        ref={ref}\n        className={cn(\n          \"glow-button shadow-soft hover:shadow-depth transition-all duration-200\",\n          variant === \"secondary\" && \"border border-white/80 text-white hover:bg-white hover:text-nb-bg bg-transparent hover:shadow-floating\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </Button>\n    );\n  }\n);\n\nGlowButton.displayName = \"GlowButton\";\n\nexport { GlowButton };\n","size_bytes":840},"client/src/components/ui/glow-card.tsx":{"content":"import { forwardRef } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface GlowCardProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n}\n\nconst GlowCard = forwardRef<HTMLDivElement, GlowCardProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(\"glow-card\", className)}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nGlowCard.displayName = \"GlowCard\";\n\nexport { GlowCard };\n","size_bytes":502},"client/src/components/ui/gradient-text.tsx":{"content":"import { forwardRef } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface GradientTextProps extends React.HTMLAttributes<HTMLSpanElement> {\n  children: React.ReactNode;\n}\n\nconst GradientText = forwardRef<HTMLSpanElement, GradientTextProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <span\n        ref={ref}\n        className={cn(\"text-gradient\", className)}\n        {...props}\n      >\n        {children}\n      </span>\n    );\n  }\n);\n\nGradientText.displayName = \"GradientText\";\n\nexport { GradientText };\n","size_bytes":534},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}},"version":1}